<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>ICE stream transport (2.4)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<TABLE border=0 width="90%"><TR><TD>
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; <A HREF="/pjnath/docs/html/index.htm">PJNATH Reference</A></p>


<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">ICE stream transport</div>  </div>
<div class="ingroups"><a class="el" href="group__PJNATH__ICE.htm">ICE: Interactive Connectivity Establishment</a></div></div><!--header-->
<div class="contents">

<p>Transport for media streams using ICE.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ice__strans__cb.htm">pj_ice_strans_cb</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__ice__strans__cfg.htm">pj_ice_strans_cfg</a></td></tr>
<tr><td colspan="2"><h2><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef struct <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a></td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga7e21cd8a6d334eb429d766bd03266f36">pj_ice_strans_op</a> { <br/>
&#160;&#160;<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gga7e21cd8a6d334eb429d766bd03266f36a3dec577623adf174527f97a0a1efa78e">PJ_ICE_STRANS_OP_INIT</a>, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gga7e21cd8a6d334eb429d766bd03266f36a4426b676f595116ca6601935560f9cba">PJ_ICE_STRANS_OP_NEGOTIATION</a>, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gga7e21cd8a6d334eb429d766bd03266f36ad86d7af7aecfee1cd801eb4fdf903aa5">PJ_ICE_STRANS_OP_KEEP_ALIVE</a>
<br/>
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga955fb99cb83263f323c0b1c134120ae4">pj_ice_strans_state</a> { <br/>
&#160;&#160;<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gga955fb99cb83263f323c0b1c134120ae4ae88d8e4f41f9644ca15190ef6960ba2d">PJ_ICE_STRANS_STATE_NULL</a>, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gga955fb99cb83263f323c0b1c134120ae4a882665cc51154c0b01a8cfb67f78d71f">PJ_ICE_STRANS_STATE_INIT</a>, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gga955fb99cb83263f323c0b1c134120ae4aa153e9f10162734cbb7855b708efd768">PJ_ICE_STRANS_STATE_READY</a>, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gga955fb99cb83263f323c0b1c134120ae4a8b9287f41cfe5912370f6fc0b3b9c8f3">PJ_ICE_STRANS_STATE_SESS_READY</a>, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gga955fb99cb83263f323c0b1c134120ae4ae4047755c131186d20e798682b5b3785">PJ_ICE_STRANS_STATE_NEGO</a>, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gga955fb99cb83263f323c0b1c134120ae4a55a88f5ce98c9e217ae761cb952a1f0f">PJ_ICE_STRANS_STATE_RUNNING</a>, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gga955fb99cb83263f323c0b1c134120ae4a1c3cb5f5adf1d8c1961c83a0d8e0eb76">PJ_ICE_STRANS_STATE_FAILED</a>
<br/>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa90900a9eda40be690494d585c2cc033">pj_ice_strans_cfg_default</a> (<a class="el" href="structpj__ice__strans__cfg.htm">pj_ice_strans_cfg</a> *cfg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga080214e4e2fb4e2be60849cdd353d85a">pj_ice_strans_cfg_copy</a> (pj_pool_t *pool, <a class="el" href="structpj__ice__strans__cfg.htm">pj_ice_strans_cfg</a> *dst, const <a class="el" href="structpj__ice__strans__cfg.htm">pj_ice_strans_cfg</a> *src)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gad62c480462e6b4267597e623a9a609c2">pj_ice_strans_create</a> (const char *name, const <a class="el" href="structpj__ice__strans__cfg.htm">pj_ice_strans_cfg</a> *cfg, unsigned comp_cnt, void *user_data, const <a class="el" href="structpj__ice__strans__cb.htm">pj_ice_strans_cb</a> *cb, <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> **p_ice_st)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga955fb99cb83263f323c0b1c134120ae4">pj_ice_strans_state</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga669a920992d598de6a736636ddc0cd67">pj_ice_strans_get_state</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gad6c191248495977bc23e69d7f1a5669d">pj_ice_strans_state_name</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga955fb99cb83263f323c0b1c134120ae4">pj_ice_strans_state</a> state)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga22326f9203e11399f710f46760d4ce8b">pj_ice_strans_destroy</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gacd72b1016bbedd5529a1995397a7604b">pj_ice_strans_get_user_data</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gae1944343e0d32818bd5e364180694ec1">pj_ice_strans_get_options</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st, <a class="el" href="structpj__ice__sess__options.htm">pj_ice_sess_options</a> *opt)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga0be6d6a0c91297e41cc9d64a373b21e8">pj_ice_strans_set_options</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st, const <a class="el" href="structpj__ice__sess__options.htm">pj_ice_sess_options</a> *opt)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_grp_lock_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga69afd1e41a8c8c86a92256ce21ca93a5">pj_ice_strans_get_grp_lock</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gabfa6ac93f3f56bab3ea8c357468f0826">pj_ice_strans_init_ice</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st, <a class="el" href="group__PJNATH__ICE__SESSION.htm#ga1d005022224e45654bcdef0eeafae217">pj_ice_sess_role</a> role, const pj_str_t *local_ufrag, const pj_str_t *local_passwd)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_bool_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga571adc0fcdfd7b9fcb3770b09a57bd0a">pj_ice_strans_has_sess</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_bool_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga24a7c14664b0fa9ba1233c43ae5e17a7">pj_ice_strans_sess_is_running</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_bool_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga11b65e1f87fb358ed896ea0e47e1b267">pj_ice_strans_sess_is_complete</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga73e8b8b0233e6cb47236f2ea1906eba7">pj_ice_strans_get_running_comp_cnt</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga6fb7cfdde71523f9fce885fd5cad982d">pj_ice_strans_get_ufrag_pwd</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st, pj_str_t *loc_ufrag, pj_str_t *loc_pwd, pj_str_t *rem_ufrag, pj_str_t *rem_pwd)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga809335ea09625345e82eff117022802b">pj_ice_strans_get_cands_count</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st, unsigned comp_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga597a3c3493038d8b37ff0a63e8ad93e5">pj_ice_strans_enum_cands</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st, unsigned comp_id, unsigned *count, <a class="el" href="structpj__ice__sess__cand.htm">pj_ice_sess_cand</a> cand[])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaea33988e6b75062d5d23bc1280442b2d">pj_ice_strans_get_def_cand</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st, unsigned comp_id, <a class="el" href="structpj__ice__sess__cand.htm">pj_ice_sess_cand</a> *cand)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__PJNATH__ICE__SESSION.htm#ga1d005022224e45654bcdef0eeafae217">pj_ice_sess_role</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga377fb5225d366f5db812a64e58ee99b9">pj_ice_strans_get_role</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga25f1a1577dd8a93991a767957af17c1e">pj_ice_strans_change_role</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st, <a class="el" href="group__PJNATH__ICE__SESSION.htm#ga1d005022224e45654bcdef0eeafae217">pj_ice_sess_role</a> new_role)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga4a60bacfd840e40b5a94c7170c6f4530">pj_ice_strans_start_ice</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st, const pj_str_t *rem_ufrag, const pj_str_t *rem_passwd, unsigned rcand_cnt, const <a class="el" href="structpj__ice__sess__cand.htm">pj_ice_sess_cand</a> rcand[])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structpj__ice__sess__check.htm">pj_ice_sess_check</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga5870316fbaebc07b3a77da852c6186fb">pj_ice_strans_get_valid_pair</a> (const <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st, unsigned comp_id)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gabda546ad9dbc4a53f406c85e157dfe73">pj_ice_strans_stop_ice</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga5ce01f1ae17a6ac73afa98c3a3c619df">pj_ice_strans_sendto</a> (<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *ice_st, unsigned comp_id, const void *data, pj_size_t data_len, const pj_sockaddr_t *dst_addr, int dst_addr_len)</td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<p>This module describes ICE stream transport, as represented by <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> structure, and is part of PJNATH - the Open Source NAT traversal helper library.</p>
<p>ICE stream transport, as represented by <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> structure, is an ICE capable class for transporting media streams within a media session. It consists of one or more transport sockets (typically two for RTP based communication - one for RTP and one for RTCP), and an <a class="el" href="group__PJNATH__ICE__SESSION.htm">ICE Session</a> for performing connectivity checks among the. various candidates of the transport addresses.</p>
<h2><a class="anchor" id="ice_strans_using_sec"></a>
Using the ICE stream transport</h2>
<p>The steps below describe how to use ICE session:</p>
<ul>
<li>initialize a <a class="el" href="structpj__ice__strans__cfg.htm">pj_ice_strans_cfg</a> structure. This contains various settings for the ICE stream transport, and among other things contains the STUN and TURN settings.<br/>
<br/>
</li>
<li>create the instance with <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gad62c480462e6b4267597e623a9a609c2">pj_ice_strans_create()</a>. Among other things, the function needs the following arguments:<ul>
<li>the <a class="el" href="structpj__ice__strans__cfg.htm">pj_ice_strans_cfg</a> structure for the main configurations</li>
<li>number of components to be supported</li>
<li>instance of <a class="el" href="structpj__ice__strans__cb.htm">pj_ice_strans_cb</a> structure to report callbacks to application.<br/>
<br/>
</li>
</ul>
</li>
<li>while the <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gad62c480462e6b4267597e623a9a609c2">pj_ice_strans_create()</a> call completes immediately, the initialization will be running in the background to gather the candidates (for example STUN and TURN candidates, if they are enabled in the <a class="el" href="structpj__ice__strans__cfg.htm">pj_ice_strans_cfg</a> setting). Application will be notified when the initialization completes in the <em>on_ice_complete</em> callback of the <a class="el" href="structpj__ice__strans__cb.htm">pj_ice_strans_cb</a> structure (the <em>op</em> argument of this callback will be PJ_ICE_STRANS_OP_INIT).<br/>
<br/>
</li>
<li>when media stream is to be started (for example, a call is to be started), create an ICE session by calling <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gabfa6ac93f3f56bab3ea8c357468f0826">pj_ice_strans_init_ice()</a>.<br/>
<br/>
</li>
<li>the application now typically will need to communicate local ICE information to remote host. It can achieve this by using the following functions to query local ICE information:<ul>
<li><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga6fb7cfdde71523f9fce885fd5cad982d">pj_ice_strans_get_ufrag_pwd()</a></li>
<li><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga597a3c3493038d8b37ff0a63e8ad93e5">pj_ice_strans_enum_cands()</a></li>
<li><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaea33988e6b75062d5d23bc1280442b2d">pj_ice_strans_get_def_cand()</a><br/>
 The application may need to encode the above information as SDP.<br/>
<br/>
</li>
</ul>
</li>
<li>when the application receives remote ICE information (for example, from the SDP received from remote), it can now start ICE negotiation, by calling <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga4a60bacfd840e40b5a94c7170c6f4530">pj_ice_strans_start_ice()</a>. This function requires some information about remote ICE agent such as remote ICE username fragment and password as well as array of remote candidates.<br/>
<br/>
</li>
<li>note that the PJNATH library does not work with SDP; application would need to encode and parse the SDP itself.<br/>
<br/>
</li>
<li>once ICE negotiation has been started, application will be notified about the completion in the <em>on_ice_complete()</em> callback of the <a class="el" href="structpj__ice__strans__cb.htm">pj_ice_strans_cb</a>.<br/>
<br/>
</li>
<li>at any time, application may send or receive data. However the ICE stream transport may not be able to send it depending on its current state. Before ICE negotiation is started, the data will be sent using default candidate of the component. After negotiation is completed, data will be sent using the candidate from the successful/nominated pair. The ICE stream transport may not be able to send data while negotiation is in progress.<br/>
<br/>
</li>
<li>application sends data by using <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga5ce01f1ae17a6ac73afa98c3a3c619df">pj_ice_strans_sendto()</a>. Incoming data will be reported in <em>on_rx_data()</em> callback of the <a class="el" href="structpj__ice__strans__cb.htm">pj_ice_strans_cb</a>.<br/>
<br/>
</li>
<li>once the media session has finished (e.g. user hangs up the call), destroy the ICE session with <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gabda546ad9dbc4a53f406c85e157dfe73">pj_ice_strans_stop_ice()</a>.<br/>
<br/>
</li>
<li>at this point, application may destroy the ICE stream transport itself, or let it run so that it can be reused to create other ICE session. The benefit of letting the ICE stream transport alive (without any session active) is to avoid delay with the initialization, howerver keeping the transport alive means the transport needs to keep the STUN binding open by using keep-alive and also TURN allocation alive, and this will consume power which is an important issue for mobile applications.<br/>
<br/>
 </li>
</ul>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="gaa9165b87d23b50b113371350a5f7aed0"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans" ref="gaa9165b87d23b50b113371350a5f7aed0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Forward declaration for ICE stream transport. </p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="ga7e21cd8a6d334eb429d766bd03266f36"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_op" ref="ga7e21cd8a6d334eb429d766bd03266f36" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga7e21cd8a6d334eb429d766bd03266f36">pj_ice_strans_op</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Transport operation types to be reported on <em>on_status()</em> callback </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga7e21cd8a6d334eb429d766bd03266f36a3dec577623adf174527f97a0a1efa78e"></a><!-- doxytag: member="PJ_ICE_STRANS_OP_INIT" ref="gga7e21cd8a6d334eb429d766bd03266f36a3dec577623adf174527f97a0a1efa78e" args="" -->PJ_ICE_STRANS_OP_INIT</em>&nbsp;</td><td>
<p>Initialization (candidate gathering) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga7e21cd8a6d334eb429d766bd03266f36a4426b676f595116ca6601935560f9cba"></a><!-- doxytag: member="PJ_ICE_STRANS_OP_NEGOTIATION" ref="gga7e21cd8a6d334eb429d766bd03266f36a4426b676f595116ca6601935560f9cba" args="" -->PJ_ICE_STRANS_OP_NEGOTIATION</em>&nbsp;</td><td>
<p>Negotiation </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga7e21cd8a6d334eb429d766bd03266f36ad86d7af7aecfee1cd801eb4fdf903aa5"></a><!-- doxytag: member="PJ_ICE_STRANS_OP_KEEP_ALIVE" ref="gga7e21cd8a6d334eb429d766bd03266f36ad86d7af7aecfee1cd801eb4fdf903aa5" args="" -->PJ_ICE_STRANS_OP_KEEP_ALIVE</em>&nbsp;</td><td>
<p>This operatino is used to report failure in keep-alive operation. Currently it is only used to report TURN Refresh failure. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="ga955fb99cb83263f323c0b1c134120ae4"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_state" ref="ga955fb99cb83263f323c0b1c134120ae4" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga955fb99cb83263f323c0b1c134120ae4">pj_ice_strans_state</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>ICE stream transport's state. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga955fb99cb83263f323c0b1c134120ae4ae88d8e4f41f9644ca15190ef6960ba2d"></a><!-- doxytag: member="PJ_ICE_STRANS_STATE_NULL" ref="gga955fb99cb83263f323c0b1c134120ae4ae88d8e4f41f9644ca15190ef6960ba2d" args="" -->PJ_ICE_STRANS_STATE_NULL</em>&nbsp;</td><td>
<p>ICE stream transport is not created. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga955fb99cb83263f323c0b1c134120ae4a882665cc51154c0b01a8cfb67f78d71f"></a><!-- doxytag: member="PJ_ICE_STRANS_STATE_INIT" ref="gga955fb99cb83263f323c0b1c134120ae4a882665cc51154c0b01a8cfb67f78d71f" args="" -->PJ_ICE_STRANS_STATE_INIT</em>&nbsp;</td><td>
<p>ICE candidate gathering process is in progress. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga955fb99cb83263f323c0b1c134120ae4aa153e9f10162734cbb7855b708efd768"></a><!-- doxytag: member="PJ_ICE_STRANS_STATE_READY" ref="gga955fb99cb83263f323c0b1c134120ae4aa153e9f10162734cbb7855b708efd768" args="" -->PJ_ICE_STRANS_STATE_READY</em>&nbsp;</td><td>
<p>ICE stream transport initialization/candidate gathering process is complete, ICE session may be created on this stream transport. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga955fb99cb83263f323c0b1c134120ae4a8b9287f41cfe5912370f6fc0b3b9c8f3"></a><!-- doxytag: member="PJ_ICE_STRANS_STATE_SESS_READY" ref="gga955fb99cb83263f323c0b1c134120ae4a8b9287f41cfe5912370f6fc0b3b9c8f3" args="" -->PJ_ICE_STRANS_STATE_SESS_READY</em>&nbsp;</td><td>
<p>New session has been created and the session is ready. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga955fb99cb83263f323c0b1c134120ae4ae4047755c131186d20e798682b5b3785"></a><!-- doxytag: member="PJ_ICE_STRANS_STATE_NEGO" ref="gga955fb99cb83263f323c0b1c134120ae4ae4047755c131186d20e798682b5b3785" args="" -->PJ_ICE_STRANS_STATE_NEGO</em>&nbsp;</td><td>
<p>ICE negotiation is in progress. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga955fb99cb83263f323c0b1c134120ae4a55a88f5ce98c9e217ae761cb952a1f0f"></a><!-- doxytag: member="PJ_ICE_STRANS_STATE_RUNNING" ref="gga955fb99cb83263f323c0b1c134120ae4a55a88f5ce98c9e217ae761cb952a1f0f" args="" -->PJ_ICE_STRANS_STATE_RUNNING</em>&nbsp;</td><td>
<p>ICE negotiation has completed successfully and media is ready to be used. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga955fb99cb83263f323c0b1c134120ae4a1c3cb5f5adf1d8c1961c83a0d8e0eb76"></a><!-- doxytag: member="PJ_ICE_STRANS_STATE_FAILED" ref="gga955fb99cb83263f323c0b1c134120ae4a1c3cb5f5adf1d8c1961c83a0d8e0eb76" args="" -->PJ_ICE_STRANS_STATE_FAILED</em>&nbsp;</td><td>
<p>ICE negotiation has completed with failure. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga080214e4e2fb4e2be60849cdd353d85a"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_cfg_copy" ref="ga080214e4e2fb4e2be60849cdd353d85a" args="(pj_pool_t *pool, pj_ice_strans_cfg *dst, const pj_ice_strans_cfg *src)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga080214e4e2fb4e2be60849cdd353d85a">pj_ice_strans_cfg_copy</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__ice__strans__cfg.htm">pj_ice_strans_cfg</a> *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__ice__strans__cfg.htm">pj_ice_strans_cfg</a> *&#160;</td>
          <td class="paramname"><em>src</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Copy configuration.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool. </td></tr>
    <tr><td class="paramname">dst</td><td>Destination. </td></tr>
    <tr><td class="paramname">src</td><td>Source. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaa90900a9eda40be690494d585c2cc033"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_cfg_default" ref="gaa90900a9eda40be690494d585c2cc033" args="(pj_ice_strans_cfg *cfg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa90900a9eda40be690494d585c2cc033">pj_ice_strans_cfg_default</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__ice__strans__cfg.htm">pj_ice_strans_cfg</a> *&#160;</td>
          <td class="paramname"><em>cfg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize ICE transport configuration with default values.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">cfg</td><td>The configuration to be initialized. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga25f1a1577dd8a93991a767957af17c1e"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_change_role" ref="ga25f1a1577dd8a93991a767957af17c1e" args="(pj_ice_strans *ice_st, pj_ice_sess_role new_role)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga25f1a1577dd8a93991a767957af17c1e">pj_ice_strans_change_role</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__SESSION.htm#ga1d005022224e45654bcdef0eeafae217">pj_ice_sess_role</a>&#160;</td>
          <td class="paramname"><em>new_role</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Change session role. This happens for example when ICE session was created with controlled role when receiving an offer, but it turns out that the offer contains "a=ice-lite" attribute when the SDP gets inspected. ICE session must have been initialized before this function can be called.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport. </td></tr>
    <tr><td class="paramname">new_role</td><td>The new role to be set.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the appropriate error. </dd></dl>

</div>
</div>
<a class="anchor" id="gad62c480462e6b4267597e623a9a609c2"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_create" ref="gad62c480462e6b4267597e623a9a609c2" args="(const char *name, const pj_ice_strans_cfg *cfg, unsigned comp_cnt, void *user_data, const pj_ice_strans_cb *cb, pj_ice_strans **p_ice_st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gad62c480462e6b4267597e623a9a609c2">pj_ice_strans_create</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__ice__strans__cfg.htm">pj_ice_strans_cfg</a> *&#160;</td>
          <td class="paramname"><em>cfg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>comp_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>user_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__ice__strans__cb.htm">pj_ice_strans_cb</a> *&#160;</td>
          <td class="paramname"><em>cb</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> **&#160;</td>
          <td class="paramname"><em>p_ice_st</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create and initialize the ICE stream transport with the specified parameters.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>Optional name for logging identification. </td></tr>
    <tr><td class="paramname">cfg</td><td>Configuration. </td></tr>
    <tr><td class="paramname">comp_cnt</td><td>Number of components. </td></tr>
    <tr><td class="paramname">user_data</td><td>Arbitrary user data to be associated with this ICE stream transport. </td></tr>
    <tr><td class="paramname">cb</td><td>Callback. </td></tr>
    <tr><td class="paramname">p_ice_st</td><td>Pointer to receive the ICE stream transport instance.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if ICE stream transport is created successfully. </dd></dl>

</div>
</div>
<a class="anchor" id="ga22326f9203e11399f710f46760d4ce8b"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_destroy" ref="ga22326f9203e11399f710f46760d4ce8b" args="(pj_ice_strans *ice_st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga22326f9203e11399f710f46760d4ce8b">pj_ice_strans_destroy</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Destroy the ICE stream transport. This will destroy the ICE session inside the ICE stream transport, close all sockets and release all other resources.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga597a3c3493038d8b37ff0a63e8ad93e5"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_enum_cands" ref="ga597a3c3493038d8b37ff0a63e8ad93e5" args="(pj_ice_strans *ice_st, unsigned comp_id, unsigned *count, pj_ice_sess_cand cand[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga597a3c3493038d8b37ff0a63e8ad93e5">pj_ice_strans_enum_cands</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>comp_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__ice__sess__cand.htm">pj_ice_sess_cand</a>&#160;</td>
          <td class="paramname"><em>cand</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Enumerate the local candidates for the specified component.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport. </td></tr>
    <tr><td class="paramname">comp_id</td><td>Component ID. </td></tr>
    <tr><td class="paramname">count</td><td>On input, it specifies the maximum number of elements. On output, it will be filled with the number of candidates copied to the array. </td></tr>
    <tr><td class="paramname">cand</td><td>Array of candidates.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga809335ea09625345e82eff117022802b"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_get_cands_count" ref="ga809335ea09625345e82eff117022802b" args="(pj_ice_strans *ice_st, unsigned comp_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga809335ea09625345e82eff117022802b">pj_ice_strans_get_cands_count</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>comp_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the number of local candidates for the specified component ID.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport. </td></tr>
    <tr><td class="paramname">comp_id</td><td>Component ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of candidates. </dd></dl>

</div>
</div>
<a class="anchor" id="gaea33988e6b75062d5d23bc1280442b2d"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_get_def_cand" ref="gaea33988e6b75062d5d23bc1280442b2d" args="(pj_ice_strans *ice_st, unsigned comp_id, pj_ice_sess_cand *cand)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaea33988e6b75062d5d23bc1280442b2d">pj_ice_strans_get_def_cand</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>comp_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__ice__sess__cand.htm">pj_ice_sess_cand</a> *&#160;</td>
          <td class="paramname"><em>cand</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the default candidate for the specified component. When this function is called before ICE negotiation completes, the default candidate is selected according to local preference criteria. When this function is called after ICE negotiation completes, the default candidate is the candidate that forms the valid pair.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport. </td></tr>
    <tr><td class="paramname">comp_id</td><td>Component ID. </td></tr>
    <tr><td class="paramname">cand</td><td>Pointer to receive the default candidate information. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga69afd1e41a8c8c86a92256ce21ca93a5"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_get_grp_lock" ref="ga69afd1e41a8c8c86a92256ce21ca93a5" args="(pj_ice_strans *ice_st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_grp_lock_t* <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga69afd1e41a8c8c86a92256ce21ca93a5">pj_ice_strans_get_grp_lock</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the group lock for this ICE stream transport.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The group lock. </dd></dl>

</div>
</div>
<a class="anchor" id="gae1944343e0d32818bd5e364180694ec1"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_get_options" ref="gae1944343e0d32818bd5e364180694ec1" args="(pj_ice_strans *ice_st, pj_ice_sess_options *opt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gae1944343e0d32818bd5e364180694ec1">pj_ice_strans_get_options</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__ice__sess__options.htm">pj_ice_sess_options</a> *&#160;</td>
          <td class="paramname"><em>opt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the value of various options of the ICE stream transport.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport. </td></tr>
    <tr><td class="paramname">opt</td><td>The options to be initialized with the values from the ICE stream transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the appropriate error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga377fb5225d366f5db812a64e58ee99b9"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_get_role" ref="ga377fb5225d366f5db812a64e58ee99b9" args="(pj_ice_strans *ice_st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJNATH__ICE__SESSION.htm#ga1d005022224e45654bcdef0eeafae217">pj_ice_sess_role</a> <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga377fb5225d366f5db812a64e58ee99b9">pj_ice_strans_get_role</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the current ICE role. ICE session must have been initialized before this function can be called.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Current ICE role. </dd></dl>

</div>
</div>
<a class="anchor" id="ga73e8b8b0233e6cb47236f2ea1906eba7"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_get_running_comp_cnt" ref="ga73e8b8b0233e6cb47236f2ea1906eba7" args="(pj_ice_strans *ice_st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga73e8b8b0233e6cb47236f2ea1906eba7">pj_ice_strans_get_running_comp_cnt</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the current/running component count. If ICE negotiation has not been started, the number of components will be equal to the number when the ICE stream transport was created. Once negotiation been started, the number of components will be the lowest number of component between local and remote agents.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The running number of components. </dd></dl>

</div>
</div>
<a class="anchor" id="ga669a920992d598de6a736636ddc0cd67"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_get_state" ref="ga669a920992d598de6a736636ddc0cd67" args="(pj_ice_strans *ice_st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga955fb99cb83263f323c0b1c134120ae4">pj_ice_strans_state</a> <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga669a920992d598de6a736636ddc0cd67">pj_ice_strans_get_state</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get ICE session state.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>ICE session state. </dd></dl>

</div>
</div>
<a class="anchor" id="ga6fb7cfdde71523f9fce885fd5cad982d"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_get_ufrag_pwd" ref="ga6fb7cfdde71523f9fce885fd5cad982d" args="(pj_ice_strans *ice_st, pj_str_t *loc_ufrag, pj_str_t *loc_pwd, pj_str_t *rem_ufrag, pj_str_t *rem_pwd)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga6fb7cfdde71523f9fce885fd5cad982d">pj_ice_strans_get_ufrag_pwd</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_str_t *&#160;</td>
          <td class="paramname"><em>loc_ufrag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_str_t *&#160;</td>
          <td class="paramname"><em>loc_pwd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_str_t *&#160;</td>
          <td class="paramname"><em>rem_ufrag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_str_t *&#160;</td>
          <td class="paramname"><em>rem_pwd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the ICE username fragment and password of the ICE session. The local username fragment and password can only be retrieved once ICE session has been created with <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gabfa6ac93f3f56bab3ea8c357468f0826">pj_ice_strans_init_ice()</a>. The remote username fragment and password can only be retrieved once ICE session has been started with <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga4a60bacfd840e40b5a94c7170c6f4530">pj_ice_strans_start_ice()</a>.</p>
<p>Note that the string returned by this function is only valid throughout the duration of the ICE session, and the application must not modify these strings. Once the ICE session has been stopped with <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gabda546ad9dbc4a53f406c85e157dfe73">pj_ice_strans_stop_ice()</a>, the pointer in the string will no longer be valid.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport. </td></tr>
    <tr><td class="paramname">loc_ufrag</td><td>Optional pointer to receive ICE username fragment of local endpoint from the ICE session. </td></tr>
    <tr><td class="paramname">loc_pwd</td><td>Optional pointer to receive ICE password of local endpoint from the ICE session. </td></tr>
    <tr><td class="paramname">rem_ufrag</td><td>Optional pointer to receive ICE username fragment of remote endpoint from the ICE session. </td></tr>
    <tr><td class="paramname">rem_pwd</td><td>Optional pointer to receive ICE password of remote endpoint from the ICE session.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if the strings have been retrieved successfully. </dd></dl>

</div>
</div>
<a class="anchor" id="gacd72b1016bbedd5529a1995397a7604b"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_get_user_data" ref="gacd72b1016bbedd5529a1995397a7604b" args="(pj_ice_strans *ice_st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gacd72b1016bbedd5529a1995397a7604b">pj_ice_strans_get_user_data</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get the user data associated with the ICE stream transport.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The user data. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5870316fbaebc07b3a77da852c6186fb"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_get_valid_pair" ref="ga5870316fbaebc07b3a77da852c6186fb" args="(const pj_ice_strans *ice_st, unsigned comp_id)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structpj__ice__sess__check.htm">pj_ice_sess_check</a>* <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga5870316fbaebc07b3a77da852c6186fb">pj_ice_strans_get_valid_pair</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>comp_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Retrieve the candidate pair that has been nominated and successfully checked for the specified component. If ICE negotiation is still in progress or it has failed, this function will return NULL.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport. </td></tr>
    <tr><td class="paramname">comp_id</td><td>Component ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The valid pair as ICE checklist structure if the pair exist. </dd></dl>

</div>
</div>
<a class="anchor" id="ga571adc0fcdfd7b9fcb3770b09a57bd0a"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_has_sess" ref="ga571adc0fcdfd7b9fcb3770b09a57bd0a" args="(pj_ice_strans *ice_st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_bool_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga571adc0fcdfd7b9fcb3770b09a57bd0a">pj_ice_strans_has_sess</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Check if the ICE stream transport has the ICE session created. The ICE session is created with <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gabfa6ac93f3f56bab3ea8c357468f0826">pj_ice_strans_init_ice()</a>.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_TRUE if <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gabfa6ac93f3f56bab3ea8c357468f0826">pj_ice_strans_init_ice()</a> has been called. </dd></dl>

</div>
</div>
<a class="anchor" id="gabfa6ac93f3f56bab3ea8c357468f0826"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_init_ice" ref="gabfa6ac93f3f56bab3ea8c357468f0826" args="(pj_ice_strans *ice_st, pj_ice_sess_role role, const pj_str_t *local_ufrag, const pj_str_t *local_passwd)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gabfa6ac93f3f56bab3ea8c357468f0826">pj_ice_strans_init_ice</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__SESSION.htm#ga1d005022224e45654bcdef0eeafae217">pj_ice_sess_role</a>&#160;</td>
          <td class="paramname"><em>role</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_str_t *&#160;</td>
          <td class="paramname"><em>local_ufrag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_str_t *&#160;</td>
          <td class="paramname"><em>local_passwd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize the ICE session in the ICE stream transport. When application is about to send an offer containing ICE capability, or when it receives an offer containing ICE capability, it must call this function to initialize the internal ICE session. This would register all transport address aliases for each component to the ICE session as candidates. Then application can enumerate all local candidates by calling <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga597a3c3493038d8b37ff0a63e8ad93e5">pj_ice_strans_enum_cands()</a>, and encode these candidates in the SDP to be sent to remote agent.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport. </td></tr>
    <tr><td class="paramname">role</td><td>ICE role. </td></tr>
    <tr><td class="paramname">local_ufrag</td><td>Optional local username fragment. </td></tr>
    <tr><td class="paramname">local_passwd</td><td>Optional local password.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5ce01f1ae17a6ac73afa98c3a3c619df"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_sendto" ref="ga5ce01f1ae17a6ac73afa98c3a3c619df" args="(pj_ice_strans *ice_st, unsigned comp_id, const void *data, pj_size_t data_len, const pj_sockaddr_t *dst_addr, int dst_addr_len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga5ce01f1ae17a6ac73afa98c3a3c619df">pj_ice_strans_sendto</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>comp_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_size_t&#160;</td>
          <td class="paramname"><em>data_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_sockaddr_t *&#160;</td>
          <td class="paramname"><em>dst_addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>dst_addr_len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Send outgoing packet using this transport. Application can send data (normally RTP or RTCP packets) at any time by calling this function. This function takes a destination address as one of the arguments, and this destination address should be taken from the default transport address of the component (that is the address in SDP c= and m= lines, or in a=rtcp attribute). If ICE negotiation is in progress, this function will send the data to the destination address. Otherwise if ICE negotiation has completed successfully, this function will send the data to the nominated remote address, as negotiated by ICE.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport. </td></tr>
    <tr><td class="paramname">comp_id</td><td>Component ID. </td></tr>
    <tr><td class="paramname">data</td><td>The data or packet to be sent. </td></tr>
    <tr><td class="paramname">data_len</td><td>Size of data or packet, in bytes. </td></tr>
    <tr><td class="paramname">dst_addr</td><td>The destination address. </td></tr>
    <tr><td class="paramname">dst_addr_len</td><td>Length of destination address.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if data is sent successfully. </dd></dl>

</div>
</div>
<a class="anchor" id="ga11b65e1f87fb358ed896ea0e47e1b267"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_sess_is_complete" ref="ga11b65e1f87fb358ed896ea0e47e1b267" args="(pj_ice_strans *ice_st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_bool_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga11b65e1f87fb358ed896ea0e47e1b267">pj_ice_strans_sess_is_complete</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Check if ICE negotiation has completed.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_TRUE if ICE session has been created and the negotiation is complete. </dd></dl>

</div>
</div>
<a class="anchor" id="ga24a7c14664b0fa9ba1233c43ae5e17a7"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_sess_is_running" ref="ga24a7c14664b0fa9ba1233c43ae5e17a7" args="(pj_ice_strans *ice_st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_bool_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga24a7c14664b0fa9ba1233c43ae5e17a7">pj_ice_strans_sess_is_running</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Check if ICE negotiation is still running.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_TRUE if ICE session has been created and ICE negotiation negotiation is in progress. </dd></dl>

</div>
</div>
<a class="anchor" id="ga0be6d6a0c91297e41cc9d64a373b21e8"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_set_options" ref="ga0be6d6a0c91297e41cc9d64a373b21e8" args="(pj_ice_strans *ice_st, const pj_ice_sess_options *opt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga0be6d6a0c91297e41cc9d64a373b21e8">pj_ice_strans_set_options</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__ice__sess__options.htm">pj_ice_sess_options</a> *&#160;</td>
          <td class="paramname"><em>opt</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Specify various options for this ICE stream transport. Application should call <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gae1944343e0d32818bd5e364180694ec1">pj_ice_strans_get_options()</a> to initialize the options with their default values.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport. </td></tr>
    <tr><td class="paramname">opt</td><td>Options to be applied to this ICE stream transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the appropriate error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga4a60bacfd840e40b5a94c7170c6f4530"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_start_ice" ref="ga4a60bacfd840e40b5a94c7170c6f4530" args="(pj_ice_strans *ice_st, const pj_str_t *rem_ufrag, const pj_str_t *rem_passwd, unsigned rcand_cnt, const pj_ice_sess_cand rcand[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga4a60bacfd840e40b5a94c7170c6f4530">pj_ice_strans_start_ice</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_str_t *&#160;</td>
          <td class="paramname"><em>rem_ufrag</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_str_t *&#160;</td>
          <td class="paramname"><em>rem_passwd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>rcand_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__ice__sess__cand.htm">pj_ice_sess_cand</a>&#160;</td>
          <td class="paramname"><em>rcand</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Start ICE connectivity checks. This function can only be called after the ICE session has been created in the ICE stream transport with <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gabfa6ac93f3f56bab3ea8c357468f0826">pj_ice_strans_init_ice()</a>.</p>
<p>This function must be called once application has received remote candidate list (typically from the remote SDP). This function pairs local candidates with remote candidates, and starts ICE connectivity checks. The ICE session/transport will then notify the application via the callback when ICE connectivity checks completes, either successfully or with failure.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport. </td></tr>
    <tr><td class="paramname">rem_ufrag</td><td>Remote ufrag, as seen in the SDP received from the remote agent. </td></tr>
    <tr><td class="paramname">rem_passwd</td><td>Remote password, as seen in the SDP received from the remote agent. </td></tr>
    <tr><td class="paramname">rcand_cnt</td><td>Number of remote candidates in the array. </td></tr>
    <tr><td class="paramname">rcand</td><td>Remote candidates array.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS, or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gad6c191248495977bc23e69d7f1a5669d"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_state_name" ref="gad6c191248495977bc23e69d7f1a5669d" args="(pj_ice_strans_state state)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gad6c191248495977bc23e69d7f1a5669d">pj_ice_strans_state_name</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga955fb99cb83263f323c0b1c134120ae4">pj_ice_strans_state</a>&#160;</td>
          <td class="paramname"><em>state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get string representation of ICE state.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">state</td><td>ICE stream transport state.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>String. </dd></dl>

</div>
</div>
<a class="anchor" id="gabda546ad9dbc4a53f406c85e157dfe73"></a><!-- doxytag: member="ice_strans.h::pj_ice_strans_stop_ice" ref="gabda546ad9dbc4a53f406c85e157dfe73" args="(pj_ice_strans *ice_st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gabda546ad9dbc4a53f406c85e157dfe73">pj_ice_strans_stop_ice</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gaa9165b87d23b50b113371350a5f7aed0">pj_ice_strans</a> *&#160;</td>
          <td class="paramname"><em>ice_st</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Stop and destroy the ICE session inside this media transport. Application needs to call this function once the media session is over (the call has been disconnected).</p>
<p>Application MAY reuse this ICE stream transport for subsequent calls. In this case, it must call <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gabda546ad9dbc4a53f406c85e157dfe73">pj_ice_strans_stop_ice()</a> when the call is disconnected, and reinitialize the ICE stream transport for subsequent call with <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#gabfa6ac93f3f56bab3ea8c357468f0826">pj_ice_strans_init_ice()</a>/<a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga4a60bacfd840e40b5a94c7170c6f4530">pj_ice_strans_start_ice()</a>. In this case, the ICE stream transport will maintain the internal sockets and continue to send STUN keep-alive packets and TURN Refresh request to keep the NAT binding/TURN allocation open and to detect change in STUN mapped address.</p>
<p>If application does not want to reuse the ICE stream transport for subsequent calls, it must call <a class="el" href="group__PJNATH__ICE__STREAM__TRANSPORT.htm#ga22326f9203e11399f710f46760d4ce8b">pj_ice_strans_destroy()</a> to destroy the ICE stream transport altogether.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">ice_st</td><td>The ICE stream transport.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS, or the appropriate error code. </dd></dl>

</div>
</div>
</div><!-- contents -->
	</TD></TD></TABLE>
<p>&nbsp;</p>
<hr><center>
PJNATH - Open Source NAT traversal helper library supporting STUN, TURN, and ICE<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
