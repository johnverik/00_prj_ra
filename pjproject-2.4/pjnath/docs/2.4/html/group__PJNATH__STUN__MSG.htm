<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>STUN Message Representation and Parsing (2.4)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<TABLE border=0 width="90%"><TR><TD>
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; <A HREF="/pjnath/docs/html/index.htm">PJNATH Reference</A></p>


<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">STUN Message Representation and Parsing</div>  </div>
<div class="ingroups"><a class="el" href="group__PJNATH__STUN__BASE.htm">Base STUN objects</a></div></div><!--header-->
<div class="contents">

<p>Low-level representation and parsing of STUN messages.  
</p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__msg__hdr.htm">pj_stun_msg_hdr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__attr__hdr.htm">pj_stun_attr_hdr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__sockaddr__attr.htm">pj_stun_xor_reflected_from_attr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__empty__attr.htm">pj_stun_use_candidate_attr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__string__attr.htm">pj_stun_password_attr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__uint__attr.htm">pj_stun_icmp_attr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__uint64__attr.htm">pj_stun_ice_controlled_attr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__binary__attr.htm">pj_stun_data_attr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__msgint__attr.htm">pj_stun_msgint_attr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__errcode__attr.htm">pj_stun_errcode_attr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__unknown__attr.htm">pj_stun_unknown_attr</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Defines</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gac28e652d56302fd341e5119af63ca5e5">PJ_STUN_MAGIC</a>&#160;&#160;&#160;0x2112A442</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gaf1d6bf269351ffb785006a6b0e76cd16">PJ_STUN_GET_METHOD</a>(msg_type)&#160;&#160;&#160;((msg_type) &amp; 0xFEEF)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga9bd086ffbd2bdc91d956179744bd901c">PJ_STUN_IS_REQUEST</a>(msg_type)&#160;&#160;&#160;(((msg_type) &amp; 0x0110) == 0x0000)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gaa8805da28364e107c76a54a2e7e8e9a9">PJ_STUN_IS_SUCCESS_RESPONSE</a>(msg_type)&#160;&#160;&#160;(((msg_type) &amp; 0x0110) == 0x0100)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gacb7d1cd7b7a4374838507b0b1564bc79">PJ_STUN_SUCCESS_RESPONSE_BIT</a>&#160;&#160;&#160;(0x0100)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga96ef633c4ef7ee5c288714aefc9b5a8e">PJ_STUN_IS_ERROR_RESPONSE</a>(msg_type)&#160;&#160;&#160;(((msg_type) &amp; 0x0110) == 0x0110)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga912e5451234aac2288ccb2229a4d859f">PJ_STUN_ERROR_RESPONSE_BIT</a>&#160;&#160;&#160;(0x0110)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gaf0a3e7d47f03fd540add7b45a3d9dffc">PJ_STUN_IS_RESPONSE</a>(msg_type)&#160;&#160;&#160;(((msg_type) &amp; 0x0100) == 0x0100)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga1c506fa2ea1a2da7f26722a2a8a82a57">PJ_STUN_IS_INDICATION</a>(msg_type)&#160;&#160;&#160;(((msg_type) &amp; 0x0110) == 0x0010)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga50cf337bb982c987089864003037f6ee">PJ_STUN_INDICATION_BIT</a>&#160;&#160;&#160;(0x0010)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga1c60bd02d6a2beb94927425d7355fbeb">PJ_STUN_GET_CH_NB</a>(u32)&#160;&#160;&#160;((pj_uint16_t)(u32&gt;&gt;16))</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gaf3d0f2be34ffe5709cfedd8e79dac390">PJ_STUN_SET_CH_NB</a>(chnum)&#160;&#160;&#160;(((pj_uint32_t)chnum) &lt;&lt; 16)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga579a19a52f014b624349b51dfeeca2fd">PJ_STUN_GET_RT_PROTO</a>(u32)&#160;&#160;&#160;(u32 &gt;&gt; 24)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gadaad805801b77b3dd21aabf8cf182ddb">PJ_STUN_SET_RT_PROTO</a>(proto)&#160;&#160;&#160;(((pj_uint32_t)(proto)) &lt;&lt; 24)</td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga576a45a145514cf1258dfa3c03c55f4f">pj_stun_method_e</a> { <br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga576a45a145514cf1258dfa3c03c55f4fae688c864aa6ec7ad83bcada6626812ef">PJ_STUN_BINDING_METHOD</a> =  1, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga576a45a145514cf1258dfa3c03c55f4fa0f92f663b6916fb033f07c1a5462bbce">PJ_STUN_SHARED_SECRET_METHOD</a> =  2, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga576a45a145514cf1258dfa3c03c55f4fa0986b10804f792748bbcd6590dd09ece">PJ_STUN_ALLOCATE_METHOD</a> =  3, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga576a45a145514cf1258dfa3c03c55f4fa95fa4e3944b374cbef3cc2504a8e7f66">PJ_STUN_REFRESH_METHOD</a> =  4, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga576a45a145514cf1258dfa3c03c55f4fae3709801bce90c9c33367339a4d25279">PJ_STUN_SEND_METHOD</a> =  6, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga576a45a145514cf1258dfa3c03c55f4fa8c36f3116326e09e93897fa13146ff2f">PJ_STUN_DATA_METHOD</a> =  7, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga576a45a145514cf1258dfa3c03c55f4fa4949b90e9c63d8e94c4a2aa67a08d426">PJ_STUN_CREATE_PERM_METHOD</a> =  8, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga576a45a145514cf1258dfa3c03c55f4fa2c3934c6680b675552666654335ca74d">PJ_STUN_CHANNEL_BIND_METHOD</a> =  9, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga576a45a145514cf1258dfa3c03c55f4fa3bd7aae91772c6ac60f0bf57747293d8">PJ_STUN_METHOD_MAX</a>
<br/>
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gaab53c9cd65e72092b9735ea8b2150006">pj_stun_msg_class_e</a> { <br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#ggaab53c9cd65e72092b9735ea8b2150006a826385230a43db07c688ba9ffff3be7d">PJ_STUN_REQUEST_CLASS</a> =  0, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#ggaab53c9cd65e72092b9735ea8b2150006afb4437c87401728f3ecb697977237cfa">PJ_STUN_INDICATION_CLASS</a> =  1, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#ggaab53c9cd65e72092b9735ea8b2150006ac60d5d1024c2b84e05e85a0e703aef23">PJ_STUN_SUCCESS_CLASS</a> =  2, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#ggaab53c9cd65e72092b9735ea8b2150006a21d9e44d1ca96f3bda0db5df5c98b63e">PJ_STUN_ERROR_CLASS</a> =  3
<br/>
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga2657d0797f3c25708d67ce1ad1e80067">pj_stun_msg_type</a> { <br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a0c57d09fa1ca9094cd63ed2396b93855">PJ_STUN_BINDING_REQUEST</a> =  0x0001, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a105ea1509b0cab21f744f442a29c900c">PJ_STUN_BINDING_RESPONSE</a> =  0x0101, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a35e560a37f0d5f0bd90e1d25f5069fe8">PJ_STUN_BINDING_ERROR_RESPONSE</a> =  0x0111, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a724c3ea57a476734abedc82a2e043dae">PJ_STUN_BINDING_INDICATION</a> =  0x0011, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a0c73890f41b432a9426afedc98d0d6f9">PJ_STUN_SHARED_SECRET_REQUEST</a> =  0x0002, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067ad2111977bd1bfeca68291fac610a5e1f">PJ_STUN_SHARED_SECRET_RESPONSE</a> =  0x0102, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a02687f7eab7567f492ee9cf6dca8df6b">PJ_STUN_SHARED_SECRET_ERROR_RESPONSE</a> =  0x0112, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a265b85120849109fb428970cc6c4793a">PJ_STUN_ALLOCATE_REQUEST</a> =  0x0003, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a2963d737383f86680241dd4b838d9759">PJ_STUN_ALLOCATE_RESPONSE</a> =  0x0103, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067acc08932cc70e772c2df441042132911e">PJ_STUN_ALLOCATE_ERROR_RESPONSE</a> =  0x0113, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a4bfa2f314430a63ea3992230c04d1150">PJ_STUN_REFRESH_REQUEST</a> =  0x0004, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a0600f3bfdc1911b8e7a58c67044c7956">PJ_STUN_REFRESH_RESPONSE</a> =  0x0104, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a622af49c135610831ffa54a6717332dd">PJ_STUN_REFRESH_ERROR_RESPONSE</a> =  0x0114, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a209c2006a05a05bf6590ce15e5c354d6">PJ_STUN_SEND_INDICATION</a> =  0x0016, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a61201eef3b1fb8b317f00ddc3617d0b2">PJ_STUN_DATA_INDICATION</a> =  0x0017, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a7ca6787c77ef452504fe0ff025bc2039">PJ_STUN_CREATE_PERM_REQUEST</a> =  0x0008, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067afce1a78b9d56d61938ee5b3ba812d2ac">PJ_STUN_CREATE_PERM_RESPONSE</a> =  0x0108, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067abc6bfaf44877eaab44a5fd772fc7592f">PJ_STUN_CREATE_PERM_ERROR_RESPONSE</a> =  0x0118, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a08a0c49b7c553a700b1e12bbb7f654a9">PJ_STUN_CHANNEL_BIND_REQUEST</a> =  0x0009, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a2f02dba1b1b59f43cdccc16fe354627c">PJ_STUN_CHANNEL_BIND_RESPONSE</a> =  0x0109, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2657d0797f3c25708d67ce1ad1e80067a6538864757a13fa27e48b3e1b2d171e8">PJ_STUN_CHANNEL_BIND_ERROR_RESPONSE</a> =  0x0119
<br/>
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a> { <br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a11d0eb590e459b949890c3170d65c232">PJ_STUN_ATTR_MAPPED_ADDR</a> =  0x0001, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a8d6c0542d4097e16eb0c2edab21f3a35">PJ_STUN_ATTR_RESPONSE_ADDR</a> =  0x0002, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a6897b9f50aa2f1acf742f717e031128a">PJ_STUN_ATTR_CHANGE_REQUEST</a> =  0x0003, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562aab8990cbee722c3a4e7f63e8191393ea">PJ_STUN_ATTR_SOURCE_ADDR</a> =  0x0004, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a10531181f4e0c507a4831c9d98e516fe">PJ_STUN_ATTR_CHANGED_ADDR</a> =  0x0005, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a042f78731393b9d99aebf92abcf8982e">PJ_STUN_ATTR_USERNAME</a> =  0x0006, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562ad1a196be6aa4f4d9431bd748225a7582">PJ_STUN_ATTR_PASSWORD</a> =  0x0007, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562af7c886e7da25b493efa6e181f1ce2ce2">PJ_STUN_ATTR_MESSAGE_INTEGRITY</a> =  0x0008, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a2f483c9d11dc81d339b651741671776f">PJ_STUN_ATTR_ERROR_CODE</a> =  0x0009, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a0bd4a533290f178722751d145f1c0ed6">PJ_STUN_ATTR_UNKNOWN_ATTRIBUTES</a> =  0x000A, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a642b97933a116db82eedab2a542c14a5">PJ_STUN_ATTR_REFLECTED_FROM</a> =  0x000B, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a1b703d0131342aaa6478de6ccea4e553">PJ_STUN_ATTR_CHANNEL_NUMBER</a> =  0x000C, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562ac2173ea00e033eea2d6bfde676b574fc">PJ_STUN_ATTR_LIFETIME</a> =  0x000D, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a393ba3559960a2aef9815f907835da8b">PJ_STUN_ATTR_MAGIC_COOKIE</a> =  0x000F, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a81de9ac8dc33f1d0b1cdc697cc948483">PJ_STUN_ATTR_BANDWIDTH</a> =  0x0010, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a3ad760bef99052967a1cb11388f01a90">PJ_STUN_ATTR_XOR_PEER_ADDR</a> =  0x0012, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a0d25d97b00b37ab71dc33d94e484cd61">PJ_STUN_ATTR_DATA</a> =  0x0013, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a6b68f55e20d2dbc08977ce83598afe74">PJ_STUN_ATTR_REALM</a> =  0x0014, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a41b08001528b5e7ab13186492999ae64">PJ_STUN_ATTR_NONCE</a> =  0x0015, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a9a0eb3fca8440947de9d0edfc6a6edad">PJ_STUN_ATTR_XOR_RELAYED_ADDR</a> =  0x0016, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a4b55e9bc8e9cf95f6b965dc8354d2f9c">PJ_STUN_ATTR_REQ_ADDR_TYPE</a> =  0x0017, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562abc4c3abe4acd6cd8b5e6d63868833c99">PJ_STUN_ATTR_EVEN_PORT</a> =  0x0018, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a6052c606ef5fca77cb9a81b7de3419d0">PJ_STUN_ATTR_REQ_TRANSPORT</a> =  0x0019, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562aa45b95e2f11a2b73c1e33317999d2a71">PJ_STUN_ATTR_DONT_FRAGMENT</a> =  0x001A, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a8ac48d4df4bb75659a88f8190351c967">PJ_STUN_ATTR_XOR_MAPPED_ADDR</a> =  0x0020, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a868c6b1ac65c812d9e11de7ff2351e84">PJ_STUN_ATTR_TIMER_VAL</a> =  0x0021, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562ab95bb8aa61156ed6d57a4eaf43b1a26e">PJ_STUN_ATTR_RESERVATION_TOKEN</a> =  0x0022, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a8a1f02689a195bb901a510714f70918b">PJ_STUN_ATTR_XOR_REFLECTED_FROM</a> =  0x0023, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562ab4d8467b0940e0d9f5ac3a3d4ff9edb6">PJ_STUN_ATTR_PRIORITY</a> =  0x0024, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a504eb24e78e726a642b28c026608cfed">PJ_STUN_ATTR_USE_CANDIDATE</a> =  0x0025, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a31449bcaaef8f55d1a8a64948d724ed6">PJ_STUN_ATTR_ICMP</a> =  0x0030, 
<br/>
&#160;&#160;<b>PJ_STUN_ATTR_END_MANDATORY_ATTR</b>, 
<br/>
&#160;&#160;<b>PJ_STUN_ATTR_START_EXTENDED_ATTR</b> =  0x8021, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a59593dc6121c303fb92e73c465eabd50">PJ_STUN_ATTR_SOFTWARE</a> =  0x8022, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a17c9141b4f63cc4377a6cef1173907ed">PJ_STUN_ATTR_ALTERNATE_SERVER</a> =  0x8023, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562aa64069ff3f24218856e9edb512833900">PJ_STUN_ATTR_REFRESH_INTERVAL</a> =  0x8024, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562aae2510f90cd970954868bd9b2b6680cb">PJ_STUN_ATTR_FINGERPRINT</a> =  0x8028, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a4c3b92415a465b083bddf89beb115f59">PJ_STUN_ATTR_ICE_CONTROLLED</a> =  0x8029, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga754fb3c4da7be369aa3ec37e757af562a351d4d5c8aa168c490b79ed65d2eb8b0">PJ_STUN_ATTR_ICE_CONTROLLING</a> =  0x802a, 
<br/>
&#160;&#160;<b>PJ_STUN_ATTR_END_EXTENDED_ATTR</b>
<br/>
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga2b53704e09bec1c58fc25b5266905d42">pj_stun_status</a> { <br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42af5f7fb4fe77d93718f0578784eceea55">PJ_STUN_SC_TRY_ALTERNATE</a> =  300, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42ac693311bd68be213df80546ef508c307">PJ_STUN_SC_BAD_REQUEST</a> =  400, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42a635c08232fc269a4de46a600012a8027">PJ_STUN_SC_UNAUTHORIZED</a> =  401, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42a3f86e374ff6f59d865d90c7ef99438fc">PJ_STUN_SC_FORBIDDEN</a> =  403, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42aed6c0ace4f6e198ad313050293986d8b">PJ_STUN_SC_UNKNOWN_ATTRIBUTE</a> =  420, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42af7d2823caf72852fc0c11e53e5bba072">PJ_STUN_SC_ALLOCATION_MISMATCH</a> =  437, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42aa5884a7dfca7d340f06d7b398cad3ec9">PJ_STUN_SC_STALE_NONCE</a> =  438, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42af21c40dc97e08c34bcefe75ab3c8c4ef">PJ_STUN_SC_TRANSITIONING</a> =  439, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42ac0639794a41a1b4b64a9e5c6e8bb9d21">PJ_STUN_SC_WRONG_CREDENTIALS</a> =  441, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42aac7aff368fad4a5ec4b27592ebb7a173">PJ_STUN_SC_UNSUPP_TRANSPORT_PROTO</a> =  442, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42ab18308f281bddaae2108d69e3167acb5">PJ_STUN_SC_OPER_TCP_ONLY</a> =  445, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42aafcce3e0ad9d2ed1aa80959635d21073">PJ_STUN_SC_CONNECTION_FAILURE</a> =  446, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42a8afab872b641c42386250bfcdbb3bb5a">PJ_STUN_SC_CONNECTION_TIMEOUT</a> =  447, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42ae3840498041a9226c7c7218f25dd74ea">PJ_STUN_SC_ALLOCATION_QUOTA_REACHED</a> =  486, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42a217a91c8995340bd63da92d427bf88f2">PJ_STUN_SC_ROLE_CONFLICT</a> =  487, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42a62d032f57feaa366939914d18adbb652">PJ_STUN_SC_SERVER_ERROR</a> =  500, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42ab835ee52484467eaff4646fd337a8cb7">PJ_STUN_SC_INSUFFICIENT_CAPACITY</a> =  508, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga2b53704e09bec1c58fc25b5266905d42a8a9a932f2d0a7e70df29b317c650bf13">PJ_STUN_SC_GLOBAL_FAILURE</a> =  600
<br/>
 }</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga597502d06b5b523c05d30e6d70e5b764">pj_stun_decode_options</a> { <br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga597502d06b5b523c05d30e6d70e5b764a1d61aff3bc5a620ba9743918a8b90d2f">PJ_STUN_IS_DATAGRAM</a> =  1, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga597502d06b5b523c05d30e6d70e5b764a5f5e93b4d4b13cbbf2885bea1560c280">PJ_STUN_CHECK_PACKET</a> =  2, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga597502d06b5b523c05d30e6d70e5b764a9ef34be9ec91e5855b482534f6ce0f29">PJ_STUN_NO_AUTHENTICATE</a> =  4, 
<br/>
&#160;&#160;<a class="el" href="group__PJNATH__STUN__MSG.htm#gga597502d06b5b523c05d30e6d70e5b764a6bd77d6d7ccdfac3235a0d44ddb8fe52">PJ_STUN_NO_FINGERPRINT_CHECK</a> =  8
<br/>
 }</td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga2be7a546769b0239a088885f7cf5584d">pj_stun_get_method_name</a> (unsigned msg_type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga460940db7725cb670b6ce1538cc2cbcd">pj_stun_get_class_name</a> (unsigned msg_type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gad76663f4a4ca96942c0febeb15d4599d">pj_stun_get_attr_name</a> (unsigned attr_type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_str_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gac2922a3d5058ffb5aa333d476191d901">pj_stun_get_err_reason</a> (int err_code)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga87b80726810c12f95c76a60c5fe3ecba">pj_stun_set_padding_char</a> (int chr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga229ed137a8851011b1236b059b5836b7">pj_stun_msg_init</a> (<a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, unsigned msg_type, pj_uint32_t magic, const pj_uint8_t tsx_id[12])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga7e4615155fd3e5629901a91fffc1548e">pj_stun_msg_create</a> (pj_pool_t *pool, unsigned msg_type, pj_uint32_t magic, const pj_uint8_t tsx_id[12], <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> **p_msg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga7d39a062977212f6a6cf06e68ddde14b">pj_stun_msg_clone</a> (pj_pool_t *pool, const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gac3e6e128901a948e5c48f2365fd8bcd7">pj_stun_msg_create_response</a> (pj_pool_t *pool, const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *req_msg, unsigned err_code, const pj_str_t *err_msg, <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> **p_response)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga9f3023881c4128eb00f35e12d0d8ed6f">pj_stun_msg_add_attr</a> (<a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, <a class="el" href="structpj__stun__attr__hdr.htm">pj_stun_attr_hdr</a> *attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga9b191ede8ca90bbf52c284ba8b7e4c32">pj_stun_msg_encode</a> (<a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, pj_uint8_t *pkt_buf, pj_size_t buf_size, unsigned options, const pj_str_t *key, pj_size_t *p_msg_len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga66011e59d3b137e1ee41bead1eeb36d8">pj_stun_msg_check</a> (const pj_uint8_t *pdu, pj_size_t pdu_len, unsigned options)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga36db49129ecbb593983360eed70c0ceb">pj_stun_msg_decode</a> (pj_pool_t *pool, const pj_uint8_t *pdu, pj_size_t pdu_len, unsigned options, <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> **p_msg, pj_size_t *p_parsed_len, <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> **p_response)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga5731590e2a8f3da23457c20c28e2996c">pj_stun_msg_dump</a> (const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, char *buffer, unsigned length, unsigned *printed_len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__stun__attr__hdr.htm">pj_stun_attr_hdr</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gad43b749c5bdafac2962cf3a05e778a13">pj_stun_msg_find_attr</a> (const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, int attr_type, unsigned start_index)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="structpj__stun__attr__hdr.htm">pj_stun_attr_hdr</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga04ade7f02e678ba412feeaf8f7106d5b">pj_stun_attr_clone</a> (pj_pool_t *pool, const <a class="el" href="structpj__stun__attr__hdr.htm">pj_stun_attr_hdr</a> *attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga84b98d3b916252efdbacbc845b00d790">pj_stun_sockaddr_attr_init</a> (<a class="el" href="structpj__stun__sockaddr__attr.htm">pj_stun_sockaddr_attr</a> *attr, int attr_type, pj_bool_t xor_ed, const pj_sockaddr_t *addr, unsigned addr_len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga9369b4a7a128c14a8978d83c9c806a7e">pj_stun_sockaddr_attr_create</a> (pj_pool_t *pool, int attr_type, pj_bool_t xor_ed, const pj_sockaddr_t *addr, unsigned addr_len, <a class="el" href="structpj__stun__sockaddr__attr.htm">pj_stun_sockaddr_attr</a> **p_attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga35acd2c0217e6c356762268f21a91c93">pj_stun_msg_add_sockaddr_attr</a> (pj_pool_t *pool, <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, int attr_type, pj_bool_t xor_ed, const pj_sockaddr_t *addr, unsigned addr_len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga6db7dcf5da336d5b04ebca774bd03574">pj_stun_string_attr_init</a> (<a class="el" href="structpj__stun__string__attr.htm">pj_stun_string_attr</a> *attr, pj_pool_t *pool, int attr_type, const pj_str_t *value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga080db867a9c4c07206b3a25a991858b0">pj_stun_string_attr_create</a> (pj_pool_t *pool, int attr_type, const pj_str_t *value, <a class="el" href="structpj__stun__string__attr.htm">pj_stun_string_attr</a> **p_attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga2d783c734653de6be5b12db107af67b1">pj_stun_msg_add_string_attr</a> (pj_pool_t *pool, <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, int attr_type, const pj_str_t *value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga2bf780e76968adb924fc65c0a5931185">pj_stun_uint_attr_create</a> (pj_pool_t *pool, int attr_type, pj_uint32_t value, <a class="el" href="structpj__stun__uint__attr.htm">pj_stun_uint_attr</a> **p_attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga16d4195f735c8c245c52c26ba3a3f8e4">pj_stun_msg_add_uint_attr</a> (pj_pool_t *pool, <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, int attr_type, pj_uint32_t value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga8083a686e9712261a0f2b029808b7a83">pj_stun_uint64_attr_create</a> (pj_pool_t *pool, int attr_type, const pj_timestamp *value, <a class="el" href="structpj__stun__uint64__attr.htm">pj_stun_uint64_attr</a> **p_attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga217ed7e663a2f385e9bd8979b291f872">pj_stun_msg_add_uint64_attr</a> (pj_pool_t *pool, <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, int attr_type, const pj_timestamp *value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gae1e7bf19c84a6391c486ad56599bdb52">pj_stun_msgint_attr_create</a> (pj_pool_t *pool, <a class="el" href="structpj__stun__msgint__attr.htm">pj_stun_msgint_attr</a> **p_attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gab4e6bff649a83d849cbad4806eaa0036">pj_stun_msg_add_msgint_attr</a> (pj_pool_t *pool, <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gac51ee3b426e013be28ccf2a9eb4dfaef">pj_stun_errcode_attr_create</a> (pj_pool_t *pool, int err_code, const pj_str_t *err_reason, <a class="el" href="structpj__stun__errcode__attr.htm">pj_stun_errcode_attr</a> **p_attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gae6c25f14abef814b71a99187b764608f">pj_stun_msg_add_errcode_attr</a> (pj_pool_t *pool, <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, int err_code, const pj_str_t *err_reason)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gad3cba84fbfcd88ea03244140f1e681e4">pj_stun_unknown_attr_create</a> (pj_pool_t *pool, unsigned attr_cnt, const pj_uint16_t attr[], <a class="el" href="structpj__stun__unknown__attr.htm">pj_stun_unknown_attr</a> **p_attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gaaeb830ccc84f82e2b29f51a686e40f3a">pj_stun_msg_add_unknown_attr</a> (pj_pool_t *pool, <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, unsigned attr_cnt, const pj_uint16_t attr[])</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga48d7e3a7b399a6b9fd14548fb783214d">pj_stun_binary_attr_init</a> (<a class="el" href="structpj__stun__binary__attr.htm">pj_stun_binary_attr</a> *attr, pj_pool_t *pool, int attr_type, const pj_uint8_t *data, unsigned length)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga1e1f24fbff2e7e1c355461c711a769ff">pj_stun_binary_attr_create</a> (pj_pool_t *pool, int attr_type, const pj_uint8_t *data, unsigned length, <a class="el" href="structpj__stun__binary__attr.htm">pj_stun_binary_attr</a> **p_attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#gaf27857b2dbc20a9f67b67c8fecdec742">pj_stun_msg_add_binary_attr</a> (pj_pool_t *pool, <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, int attr_type, const pj_uint8_t *data, unsigned length)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga1a6ef3a1318db2746006d9dbdf21741f">pj_stun_empty_attr_create</a> (pj_pool_t *pool, int attr_type, <a class="el" href="structpj__stun__empty__attr.htm">pj_stun_empty_attr</a> **p_attr)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">pj_status_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__PJNATH__STUN__MSG.htm#ga40574a1b2edc34bb5d71c252d9d967cc">pj_stun_msg_add_empty_attr</a> (pj_pool_t *pool, <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *msg, int attr_type)</td></tr>
</table>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="ga912e5451234aac2288ccb2229a4d859f"></a><!-- doxytag: member="stun_msg.h::PJ_STUN_ERROR_RESPONSE_BIT" ref="ga912e5451234aac2288ccb2229a4d859f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="group__PJNATH__STUN__MSG.htm#ga912e5451234aac2288ccb2229a4d859f">PJ_STUN_ERROR_RESPONSE_BIT</a>&#160;&#160;&#160;(0x0110)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The error response bit in the message type. </p>

</div>
</div>
<a class="anchor" id="ga1c60bd02d6a2beb94927425d7355fbeb"></a><!-- doxytag: member="stun_msg.h::PJ_STUN_GET_CH_NB" ref="ga1c60bd02d6a2beb94927425d7355fbeb" args="(u32)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="group__PJNATH__STUN__MSG.htm#ga1c60bd02d6a2beb94927425d7355fbeb">PJ_STUN_GET_CH_NB</a></td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;((pj_uint16_t)(u32&gt;&gt;16))</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get 16bit channel number from 32bit integral value. Note that uint32 attributes are always stored in host byte order after they have been parsed from the PDU, so no need to do ntohs() here. </p>

</div>
</div>
<a class="anchor" id="gaf1d6bf269351ffb785006a6b0e76cd16"></a><!-- doxytag: member="stun_msg.h::PJ_STUN_GET_METHOD" ref="gaf1d6bf269351ffb785006a6b0e76cd16" args="(msg_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="group__PJNATH__STUN__MSG.htm#gaf1d6bf269351ffb785006a6b0e76cd16">PJ_STUN_GET_METHOD</a></td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg_type</td><td>)</td>
          <td>&#160;&#160;&#160;((msg_type) &amp; 0xFEEF)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Retrieve the STUN method from the message-type field of the STUN message. </p>

</div>
</div>
<a class="anchor" id="ga579a19a52f014b624349b51dfeeca2fd"></a><!-- doxytag: member="stun_msg.h::PJ_STUN_GET_RT_PROTO" ref="ga579a19a52f014b624349b51dfeeca2fd" args="(u32)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="group__PJNATH__STUN__MSG.htm#ga579a19a52f014b624349b51dfeeca2fd">PJ_STUN_GET_RT_PROTO</a></td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">u32</td><td>)</td>
          <td>&#160;&#160;&#160;(u32 &gt;&gt; 24)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get protocol value from 32bit TURN REQUESTED-TRANSPORT attribute. </p>

</div>
</div>
<a class="anchor" id="ga50cf337bb982c987089864003037f6ee"></a><!-- doxytag: member="stun_msg.h::PJ_STUN_INDICATION_BIT" ref="ga50cf337bb982c987089864003037f6ee" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="group__PJNATH__STUN__MSG.htm#ga50cf337bb982c987089864003037f6ee">PJ_STUN_INDICATION_BIT</a>&#160;&#160;&#160;(0x0010)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The error response bit in the message type. </p>

</div>
</div>
<a class="anchor" id="ga96ef633c4ef7ee5c288714aefc9b5a8e"></a><!-- doxytag: member="stun_msg.h::PJ_STUN_IS_ERROR_RESPONSE" ref="ga96ef633c4ef7ee5c288714aefc9b5a8e" args="(msg_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="group__PJNATH__STUN__MSG.htm#ga96ef633c4ef7ee5c288714aefc9b5a8e">PJ_STUN_IS_ERROR_RESPONSE</a></td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg_type</td><td>)</td>
          <td>&#160;&#160;&#160;(((msg_type) &amp; 0x0110) == 0x0110)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Determine if the message type is an error response. </p>

</div>
</div>
<a class="anchor" id="ga1c506fa2ea1a2da7f26722a2a8a82a57"></a><!-- doxytag: member="stun_msg.h::PJ_STUN_IS_INDICATION" ref="ga1c506fa2ea1a2da7f26722a2a8a82a57" args="(msg_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="group__PJNATH__STUN__MSG.htm#ga1c506fa2ea1a2da7f26722a2a8a82a57">PJ_STUN_IS_INDICATION</a></td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg_type</td><td>)</td>
          <td>&#160;&#160;&#160;(((msg_type) &amp; 0x0110) == 0x0010)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Determine if the message type is an indication message. </p>

</div>
</div>
<a class="anchor" id="ga9bd086ffbd2bdc91d956179744bd901c"></a><!-- doxytag: member="stun_msg.h::PJ_STUN_IS_REQUEST" ref="ga9bd086ffbd2bdc91d956179744bd901c" args="(msg_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="group__PJNATH__STUN__MSG.htm#ga9bd086ffbd2bdc91d956179744bd901c">PJ_STUN_IS_REQUEST</a></td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg_type</td><td>)</td>
          <td>&#160;&#160;&#160;(((msg_type) &amp; 0x0110) == 0x0000)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Determine if the message type is a request. </p>

</div>
</div>
<a class="anchor" id="gaf0a3e7d47f03fd540add7b45a3d9dffc"></a><!-- doxytag: member="stun_msg.h::PJ_STUN_IS_RESPONSE" ref="gaf0a3e7d47f03fd540add7b45a3d9dffc" args="(msg_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="group__PJNATH__STUN__MSG.htm#gaf0a3e7d47f03fd540add7b45a3d9dffc">PJ_STUN_IS_RESPONSE</a></td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg_type</td><td>)</td>
          <td>&#160;&#160;&#160;(((msg_type) &amp; 0x0100) == 0x0100)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Determine if the message type is a response. </p>

</div>
</div>
<a class="anchor" id="gaa8805da28364e107c76a54a2e7e8e9a9"></a><!-- doxytag: member="stun_msg.h::PJ_STUN_IS_SUCCESS_RESPONSE" ref="gaa8805da28364e107c76a54a2e7e8e9a9" args="(msg_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="group__PJNATH__STUN__MSG.htm#gaa8805da28364e107c76a54a2e7e8e9a9">PJ_STUN_IS_SUCCESS_RESPONSE</a></td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">msg_type</td><td>)</td>
          <td>&#160;&#160;&#160;(((msg_type) &amp; 0x0110) == 0x0100)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Determine if the message type is a successful response. </p>

</div>
</div>
<a class="anchor" id="gac28e652d56302fd341e5119af63ca5e5"></a><!-- doxytag: member="stun_msg.h::PJ_STUN_MAGIC" ref="gac28e652d56302fd341e5119af63ca5e5" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="group__PJNATH__STUN__MSG.htm#gac28e652d56302fd341e5119af63ca5e5">PJ_STUN_MAGIC</a>&#160;&#160;&#160;0x2112A442</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>STUN magic cookie. </p>

</div>
</div>
<a class="anchor" id="gaf3d0f2be34ffe5709cfedd8e79dac390"></a><!-- doxytag: member="stun_msg.h::PJ_STUN_SET_CH_NB" ref="gaf3d0f2be34ffe5709cfedd8e79dac390" args="(chnum)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="group__PJNATH__STUN__MSG.htm#gaf3d0f2be34ffe5709cfedd8e79dac390">PJ_STUN_SET_CH_NB</a></td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">chnum</td><td>)</td>
          <td>&#160;&#160;&#160;(((pj_uint32_t)chnum) &lt;&lt; 16)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Convert 16bit channel number into 32bit integral value. Note that uint32 attributes will be converted to network byte order when the attribute is written to packet, so no need to do htons() here. </p>

</div>
</div>
<a class="anchor" id="gadaad805801b77b3dd21aabf8cf182ddb"></a><!-- doxytag: member="stun_msg.h::PJ_STUN_SET_RT_PROTO" ref="gadaad805801b77b3dd21aabf8cf182ddb" args="(proto)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="group__PJNATH__STUN__MSG.htm#gadaad805801b77b3dd21aabf8cf182ddb">PJ_STUN_SET_RT_PROTO</a></td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">proto</td><td>)</td>
          <td>&#160;&#160;&#160;(((pj_uint32_t)(proto)) &lt;&lt; 24)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Convert protocol value to be placed in 32bit TURN REQUESTED-TRANSPORT attribute. </p>

</div>
</div>
<a class="anchor" id="gacb7d1cd7b7a4374838507b0b1564bc79"></a><!-- doxytag: member="stun_msg.h::PJ_STUN_SUCCESS_RESPONSE_BIT" ref="gacb7d1cd7b7a4374838507b0b1564bc79" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define <a class="el" href="group__PJNATH__STUN__MSG.htm#gacb7d1cd7b7a4374838507b0b1564bc79">PJ_STUN_SUCCESS_RESPONSE_BIT</a>&#160;&#160;&#160;(0x0100)</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>The response bit in the message type. </p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="ga754fb3c4da7be369aa3ec37e757af562"></a><!-- doxytag: member="stun_msg.h::pj_stun_attr_type" ref="ga754fb3c4da7be369aa3ec37e757af562" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This enumeration describes STUN attribute types. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a11d0eb590e459b949890c3170d65c232"></a><!-- doxytag: member="PJ_STUN_ATTR_MAPPED_ADDR" ref="gga754fb3c4da7be369aa3ec37e757af562a11d0eb590e459b949890c3170d65c232" args="" -->PJ_STUN_ATTR_MAPPED_ADDR</em>&nbsp;</td><td>
<p>MAPPED-ADDRESS. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a8d6c0542d4097e16eb0c2edab21f3a35"></a><!-- doxytag: member="PJ_STUN_ATTR_RESPONSE_ADDR" ref="gga754fb3c4da7be369aa3ec37e757af562a8d6c0542d4097e16eb0c2edab21f3a35" args="" -->PJ_STUN_ATTR_RESPONSE_ADDR</em>&nbsp;</td><td>
<p>RESPONSE-ADDRESS (deprcatd) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a6897b9f50aa2f1acf742f717e031128a"></a><!-- doxytag: member="PJ_STUN_ATTR_CHANGE_REQUEST" ref="gga754fb3c4da7be369aa3ec37e757af562a6897b9f50aa2f1acf742f717e031128a" args="" -->PJ_STUN_ATTR_CHANGE_REQUEST</em>&nbsp;</td><td>
<p>CHANGE-REQUEST (deprecated) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562aab8990cbee722c3a4e7f63e8191393ea"></a><!-- doxytag: member="PJ_STUN_ATTR_SOURCE_ADDR" ref="gga754fb3c4da7be369aa3ec37e757af562aab8990cbee722c3a4e7f63e8191393ea" args="" -->PJ_STUN_ATTR_SOURCE_ADDR</em>&nbsp;</td><td>
<p>SOURCE-ADDRESS (deprecated) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a10531181f4e0c507a4831c9d98e516fe"></a><!-- doxytag: member="PJ_STUN_ATTR_CHANGED_ADDR" ref="gga754fb3c4da7be369aa3ec37e757af562a10531181f4e0c507a4831c9d98e516fe" args="" -->PJ_STUN_ATTR_CHANGED_ADDR</em>&nbsp;</td><td>
<p>CHANGED-ADDRESS (deprecatd) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a042f78731393b9d99aebf92abcf8982e"></a><!-- doxytag: member="PJ_STUN_ATTR_USERNAME" ref="gga754fb3c4da7be369aa3ec37e757af562a042f78731393b9d99aebf92abcf8982e" args="" -->PJ_STUN_ATTR_USERNAME</em>&nbsp;</td><td>
<p>USERNAME attribute. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562ad1a196be6aa4f4d9431bd748225a7582"></a><!-- doxytag: member="PJ_STUN_ATTR_PASSWORD" ref="gga754fb3c4da7be369aa3ec37e757af562ad1a196be6aa4f4d9431bd748225a7582" args="" -->PJ_STUN_ATTR_PASSWORD</em>&nbsp;</td><td>
<p>was PASSWORD attribute. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562af7c886e7da25b493efa6e181f1ce2ce2"></a><!-- doxytag: member="PJ_STUN_ATTR_MESSAGE_INTEGRITY" ref="gga754fb3c4da7be369aa3ec37e757af562af7c886e7da25b493efa6e181f1ce2ce2" args="" -->PJ_STUN_ATTR_MESSAGE_INTEGRITY</em>&nbsp;</td><td>
<p>MESSAGE-INTEGRITY. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a2f483c9d11dc81d339b651741671776f"></a><!-- doxytag: member="PJ_STUN_ATTR_ERROR_CODE" ref="gga754fb3c4da7be369aa3ec37e757af562a2f483c9d11dc81d339b651741671776f" args="" -->PJ_STUN_ATTR_ERROR_CODE</em>&nbsp;</td><td>
<p>ERROR-CODE. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a0bd4a533290f178722751d145f1c0ed6"></a><!-- doxytag: member="PJ_STUN_ATTR_UNKNOWN_ATTRIBUTES" ref="gga754fb3c4da7be369aa3ec37e757af562a0bd4a533290f178722751d145f1c0ed6" args="" -->PJ_STUN_ATTR_UNKNOWN_ATTRIBUTES</em>&nbsp;</td><td>
<p>UNKNOWN-ATTRIBUTES. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a642b97933a116db82eedab2a542c14a5"></a><!-- doxytag: member="PJ_STUN_ATTR_REFLECTED_FROM" ref="gga754fb3c4da7be369aa3ec37e757af562a642b97933a116db82eedab2a542c14a5" args="" -->PJ_STUN_ATTR_REFLECTED_FROM</em>&nbsp;</td><td>
<p>REFLECTED-FROM (deprecatd) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a1b703d0131342aaa6478de6ccea4e553"></a><!-- doxytag: member="PJ_STUN_ATTR_CHANNEL_NUMBER" ref="gga754fb3c4da7be369aa3ec37e757af562a1b703d0131342aaa6478de6ccea4e553" args="" -->PJ_STUN_ATTR_CHANNEL_NUMBER</em>&nbsp;</td><td>
<p>TURN CHANNEL-NUMBER </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562ac2173ea00e033eea2d6bfde676b574fc"></a><!-- doxytag: member="PJ_STUN_ATTR_LIFETIME" ref="gga754fb3c4da7be369aa3ec37e757af562ac2173ea00e033eea2d6bfde676b574fc" args="" -->PJ_STUN_ATTR_LIFETIME</em>&nbsp;</td><td>
<p>TURN LIFETIME attr. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a393ba3559960a2aef9815f907835da8b"></a><!-- doxytag: member="PJ_STUN_ATTR_MAGIC_COOKIE" ref="gga754fb3c4da7be369aa3ec37e757af562a393ba3559960a2aef9815f907835da8b" args="" -->PJ_STUN_ATTR_MAGIC_COOKIE</em>&nbsp;</td><td>
<p>MAGIC-COOKIE attr (deprec) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a81de9ac8dc33f1d0b1cdc697cc948483"></a><!-- doxytag: member="PJ_STUN_ATTR_BANDWIDTH" ref="gga754fb3c4da7be369aa3ec37e757af562a81de9ac8dc33f1d0b1cdc697cc948483" args="" -->PJ_STUN_ATTR_BANDWIDTH</em>&nbsp;</td><td>
<p>TURN BANDWIDTH (deprec) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a3ad760bef99052967a1cb11388f01a90"></a><!-- doxytag: member="PJ_STUN_ATTR_XOR_PEER_ADDR" ref="gga754fb3c4da7be369aa3ec37e757af562a3ad760bef99052967a1cb11388f01a90" args="" -->PJ_STUN_ATTR_XOR_PEER_ADDR</em>&nbsp;</td><td>
<p>TURN XOR-PEER-ADDRESS </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a0d25d97b00b37ab71dc33d94e484cd61"></a><!-- doxytag: member="PJ_STUN_ATTR_DATA" ref="gga754fb3c4da7be369aa3ec37e757af562a0d25d97b00b37ab71dc33d94e484cd61" args="" -->PJ_STUN_ATTR_DATA</em>&nbsp;</td><td>
<p>DATA attribute. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a6b68f55e20d2dbc08977ce83598afe74"></a><!-- doxytag: member="PJ_STUN_ATTR_REALM" ref="gga754fb3c4da7be369aa3ec37e757af562a6b68f55e20d2dbc08977ce83598afe74" args="" -->PJ_STUN_ATTR_REALM</em>&nbsp;</td><td>
<p>REALM attribute. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a41b08001528b5e7ab13186492999ae64"></a><!-- doxytag: member="PJ_STUN_ATTR_NONCE" ref="gga754fb3c4da7be369aa3ec37e757af562a41b08001528b5e7ab13186492999ae64" args="" -->PJ_STUN_ATTR_NONCE</em>&nbsp;</td><td>
<p>NONCE attribute. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a9a0eb3fca8440947de9d0edfc6a6edad"></a><!-- doxytag: member="PJ_STUN_ATTR_XOR_RELAYED_ADDR" ref="gga754fb3c4da7be369aa3ec37e757af562a9a0eb3fca8440947de9d0edfc6a6edad" args="" -->PJ_STUN_ATTR_XOR_RELAYED_ADDR</em>&nbsp;</td><td>
<p>TURN XOR-RELAYED-ADDRESS </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a4b55e9bc8e9cf95f6b965dc8354d2f9c"></a><!-- doxytag: member="PJ_STUN_ATTR_REQ_ADDR_TYPE" ref="gga754fb3c4da7be369aa3ec37e757af562a4b55e9bc8e9cf95f6b965dc8354d2f9c" args="" -->PJ_STUN_ATTR_REQ_ADDR_TYPE</em>&nbsp;</td><td>
<p>REQUESTED-ADDRESS-TYPE </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562abc4c3abe4acd6cd8b5e6d63868833c99"></a><!-- doxytag: member="PJ_STUN_ATTR_EVEN_PORT" ref="gga754fb3c4da7be369aa3ec37e757af562abc4c3abe4acd6cd8b5e6d63868833c99" args="" -->PJ_STUN_ATTR_EVEN_PORT</em>&nbsp;</td><td>
<p>TURN EVEN-PORT </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a6052c606ef5fca77cb9a81b7de3419d0"></a><!-- doxytag: member="PJ_STUN_ATTR_REQ_TRANSPORT" ref="gga754fb3c4da7be369aa3ec37e757af562a6052c606ef5fca77cb9a81b7de3419d0" args="" -->PJ_STUN_ATTR_REQ_TRANSPORT</em>&nbsp;</td><td>
<p>TURN REQUESTED-TRANSPORT </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562aa45b95e2f11a2b73c1e33317999d2a71"></a><!-- doxytag: member="PJ_STUN_ATTR_DONT_FRAGMENT" ref="gga754fb3c4da7be369aa3ec37e757af562aa45b95e2f11a2b73c1e33317999d2a71" args="" -->PJ_STUN_ATTR_DONT_FRAGMENT</em>&nbsp;</td><td>
<p>TURN DONT-FRAGMENT </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a8ac48d4df4bb75659a88f8190351c967"></a><!-- doxytag: member="PJ_STUN_ATTR_XOR_MAPPED_ADDR" ref="gga754fb3c4da7be369aa3ec37e757af562a8ac48d4df4bb75659a88f8190351c967" args="" -->PJ_STUN_ATTR_XOR_MAPPED_ADDR</em>&nbsp;</td><td>
<p>XOR-MAPPED-ADDRESS </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a868c6b1ac65c812d9e11de7ff2351e84"></a><!-- doxytag: member="PJ_STUN_ATTR_TIMER_VAL" ref="gga754fb3c4da7be369aa3ec37e757af562a868c6b1ac65c812d9e11de7ff2351e84" args="" -->PJ_STUN_ATTR_TIMER_VAL</em>&nbsp;</td><td>
<p>TIMER-VAL attribute. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562ab95bb8aa61156ed6d57a4eaf43b1a26e"></a><!-- doxytag: member="PJ_STUN_ATTR_RESERVATION_TOKEN" ref="gga754fb3c4da7be369aa3ec37e757af562ab95bb8aa61156ed6d57a4eaf43b1a26e" args="" -->PJ_STUN_ATTR_RESERVATION_TOKEN</em>&nbsp;</td><td>
<p>TURN RESERVATION-TOKEN </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a8a1f02689a195bb901a510714f70918b"></a><!-- doxytag: member="PJ_STUN_ATTR_XOR_REFLECTED_FROM" ref="gga754fb3c4da7be369aa3ec37e757af562a8a1f02689a195bb901a510714f70918b" args="" -->PJ_STUN_ATTR_XOR_REFLECTED_FROM</em>&nbsp;</td><td>
<p>XOR-REFLECTED-FROM </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562ab4d8467b0940e0d9f5ac3a3d4ff9edb6"></a><!-- doxytag: member="PJ_STUN_ATTR_PRIORITY" ref="gga754fb3c4da7be369aa3ec37e757af562ab4d8467b0940e0d9f5ac3a3d4ff9edb6" args="" -->PJ_STUN_ATTR_PRIORITY</em>&nbsp;</td><td>
<p>PRIORITY </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a504eb24e78e726a642b28c026608cfed"></a><!-- doxytag: member="PJ_STUN_ATTR_USE_CANDIDATE" ref="gga754fb3c4da7be369aa3ec37e757af562a504eb24e78e726a642b28c026608cfed" args="" -->PJ_STUN_ATTR_USE_CANDIDATE</em>&nbsp;</td><td>
<p>USE-CANDIDATE </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a31449bcaaef8f55d1a8a64948d724ed6"></a><!-- doxytag: member="PJ_STUN_ATTR_ICMP" ref="gga754fb3c4da7be369aa3ec37e757af562a31449bcaaef8f55d1a8a64948d724ed6" args="" -->PJ_STUN_ATTR_ICMP</em>&nbsp;</td><td>
<p>ICMP (TURN) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a59593dc6121c303fb92e73c465eabd50"></a><!-- doxytag: member="PJ_STUN_ATTR_SOFTWARE" ref="gga754fb3c4da7be369aa3ec37e757af562a59593dc6121c303fb92e73c465eabd50" args="" -->PJ_STUN_ATTR_SOFTWARE</em>&nbsp;</td><td>
<p>SOFTWARE attribute. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a17c9141b4f63cc4377a6cef1173907ed"></a><!-- doxytag: member="PJ_STUN_ATTR_ALTERNATE_SERVER" ref="gga754fb3c4da7be369aa3ec37e757af562a17c9141b4f63cc4377a6cef1173907ed" args="" -->PJ_STUN_ATTR_ALTERNATE_SERVER</em>&nbsp;</td><td>
<p>ALTERNATE-SERVER. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562aa64069ff3f24218856e9edb512833900"></a><!-- doxytag: member="PJ_STUN_ATTR_REFRESH_INTERVAL" ref="gga754fb3c4da7be369aa3ec37e757af562aa64069ff3f24218856e9edb512833900" args="" -->PJ_STUN_ATTR_REFRESH_INTERVAL</em>&nbsp;</td><td>
<p>REFRESH-INTERVAL. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562aae2510f90cd970954868bd9b2b6680cb"></a><!-- doxytag: member="PJ_STUN_ATTR_FINGERPRINT" ref="gga754fb3c4da7be369aa3ec37e757af562aae2510f90cd970954868bd9b2b6680cb" args="" -->PJ_STUN_ATTR_FINGERPRINT</em>&nbsp;</td><td>
<p>FINGERPRINT attribute. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a4c3b92415a465b083bddf89beb115f59"></a><!-- doxytag: member="PJ_STUN_ATTR_ICE_CONTROLLED" ref="gga754fb3c4da7be369aa3ec37e757af562a4c3b92415a465b083bddf89beb115f59" args="" -->PJ_STUN_ATTR_ICE_CONTROLLED</em>&nbsp;</td><td>
<p>ICE-CCONTROLLED attribute. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga754fb3c4da7be369aa3ec37e757af562a351d4d5c8aa168c490b79ed65d2eb8b0"></a><!-- doxytag: member="PJ_STUN_ATTR_ICE_CONTROLLING" ref="gga754fb3c4da7be369aa3ec37e757af562a351d4d5c8aa168c490b79ed65d2eb8b0" args="" -->PJ_STUN_ATTR_ICE_CONTROLLING</em>&nbsp;</td><td>
<p>ICE-CCONTROLLING attribute </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="ga597502d06b5b523c05d30e6d70e5b764"></a><!-- doxytag: member="stun_msg.h::pj_stun_decode_options" ref="ga597502d06b5b523c05d30e6d70e5b764" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJNATH__STUN__MSG.htm#ga597502d06b5b523c05d30e6d70e5b764">pj_stun_decode_options</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>STUN decoding options </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga597502d06b5b523c05d30e6d70e5b764a1d61aff3bc5a620ba9743918a8b90d2f"></a><!-- doxytag: member="PJ_STUN_IS_DATAGRAM" ref="gga597502d06b5b523c05d30e6d70e5b764a1d61aff3bc5a620ba9743918a8b90d2f" args="" -->PJ_STUN_IS_DATAGRAM</em>&nbsp;</td><td>
<p>Tell the decoder that the message was received from datagram oriented transport (such as UDP). </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga597502d06b5b523c05d30e6d70e5b764a5f5e93b4d4b13cbbf2885bea1560c280"></a><!-- doxytag: member="PJ_STUN_CHECK_PACKET" ref="gga597502d06b5b523c05d30e6d70e5b764a5f5e93b4d4b13cbbf2885bea1560c280" args="" -->PJ_STUN_CHECK_PACKET</em>&nbsp;</td><td>
<p>Tell <a class="el" href="group__PJNATH__STUN__MSG.htm#ga36db49129ecbb593983360eed70c0ceb">pj_stun_msg_decode()</a> to check the validity of the STUN message by calling <a class="el" href="group__PJNATH__STUN__MSG.htm#ga66011e59d3b137e1ee41bead1eeb36d8">pj_stun_msg_check()</a> before starting to decode the packet. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga597502d06b5b523c05d30e6d70e5b764a9ef34be9ec91e5855b482534f6ce0f29"></a><!-- doxytag: member="PJ_STUN_NO_AUTHENTICATE" ref="gga597502d06b5b523c05d30e6d70e5b764a9ef34be9ec91e5855b482534f6ce0f29" args="" -->PJ_STUN_NO_AUTHENTICATE</em>&nbsp;</td><td>
<p>This option current is only valid for <a class="el" href="group__PJNATH__STUN__SESSION.htm#ga1c091311b90e4d6e25f7dc1c7b8cbe8c">pj_stun_session_on_rx_pkt()</a>. When specified, it tells the session NOT to authenticate the message. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga597502d06b5b523c05d30e6d70e5b764a6bd77d6d7ccdfac3235a0d44ddb8fe52"></a><!-- doxytag: member="PJ_STUN_NO_FINGERPRINT_CHECK" ref="gga597502d06b5b523c05d30e6d70e5b764a6bd77d6d7ccdfac3235a0d44ddb8fe52" args="" -->PJ_STUN_NO_FINGERPRINT_CHECK</em>&nbsp;</td><td>
<p>Disable FINGERPRINT verification. This option can be used when calling <a class="el" href="group__PJNATH__STUN__MSG.htm#ga66011e59d3b137e1ee41bead1eeb36d8">pj_stun_msg_check()</a> and <a class="el" href="group__PJNATH__STUN__MSG.htm#ga36db49129ecbb593983360eed70c0ceb">pj_stun_msg_decode()</a> to disable the verification of FINGERPRINT, for example when the STUN usage says when FINGERPRINT mechanism shall not be used. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="ga576a45a145514cf1258dfa3c03c55f4f"></a><!-- doxytag: member="stun_msg.h::pj_stun_method_e" ref="ga576a45a145514cf1258dfa3c03c55f4f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJNATH__STUN__MSG.htm#ga576a45a145514cf1258dfa3c03c55f4f">pj_stun_method_e</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>STUN method constants. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga576a45a145514cf1258dfa3c03c55f4fae688c864aa6ec7ad83bcada6626812ef"></a><!-- doxytag: member="PJ_STUN_BINDING_METHOD" ref="gga576a45a145514cf1258dfa3c03c55f4fae688c864aa6ec7ad83bcada6626812ef" args="" -->PJ_STUN_BINDING_METHOD</em>&nbsp;</td><td>
<p>STUN Binding method as defined by RFC 3489-bis. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga576a45a145514cf1258dfa3c03c55f4fa0f92f663b6916fb033f07c1a5462bbce"></a><!-- doxytag: member="PJ_STUN_SHARED_SECRET_METHOD" ref="gga576a45a145514cf1258dfa3c03c55f4fa0f92f663b6916fb033f07c1a5462bbce" args="" -->PJ_STUN_SHARED_SECRET_METHOD</em>&nbsp;</td><td>
<p>STUN Shared Secret method as defined by RFC 3489-bis. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga576a45a145514cf1258dfa3c03c55f4fa0986b10804f792748bbcd6590dd09ece"></a><!-- doxytag: member="PJ_STUN_ALLOCATE_METHOD" ref="gga576a45a145514cf1258dfa3c03c55f4fa0986b10804f792748bbcd6590dd09ece" args="" -->PJ_STUN_ALLOCATE_METHOD</em>&nbsp;</td><td>
<p>STUN/TURN Allocate method as defined by draft-ietf-behave-turn </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga576a45a145514cf1258dfa3c03c55f4fa95fa4e3944b374cbef3cc2504a8e7f66"></a><!-- doxytag: member="PJ_STUN_REFRESH_METHOD" ref="gga576a45a145514cf1258dfa3c03c55f4fa95fa4e3944b374cbef3cc2504a8e7f66" args="" -->PJ_STUN_REFRESH_METHOD</em>&nbsp;</td><td>
<p>STUN/TURN Refresh method as defined by draft-ietf-behave-turn </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga576a45a145514cf1258dfa3c03c55f4fae3709801bce90c9c33367339a4d25279"></a><!-- doxytag: member="PJ_STUN_SEND_METHOD" ref="gga576a45a145514cf1258dfa3c03c55f4fae3709801bce90c9c33367339a4d25279" args="" -->PJ_STUN_SEND_METHOD</em>&nbsp;</td><td>
<p>STUN/TURN Send indication as defined by draft-ietf-behave-turn </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga576a45a145514cf1258dfa3c03c55f4fa8c36f3116326e09e93897fa13146ff2f"></a><!-- doxytag: member="PJ_STUN_DATA_METHOD" ref="gga576a45a145514cf1258dfa3c03c55f4fa8c36f3116326e09e93897fa13146ff2f" args="" -->PJ_STUN_DATA_METHOD</em>&nbsp;</td><td>
<p>STUN/TURN Data indication as defined by draft-ietf-behave-turn </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga576a45a145514cf1258dfa3c03c55f4fa4949b90e9c63d8e94c4a2aa67a08d426"></a><!-- doxytag: member="PJ_STUN_CREATE_PERM_METHOD" ref="gga576a45a145514cf1258dfa3c03c55f4fa4949b90e9c63d8e94c4a2aa67a08d426" args="" -->PJ_STUN_CREATE_PERM_METHOD</em>&nbsp;</td><td>
<p>STUN/TURN CreatePermission method as defined by draft-ietf-behave-turn </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga576a45a145514cf1258dfa3c03c55f4fa2c3934c6680b675552666654335ca74d"></a><!-- doxytag: member="PJ_STUN_CHANNEL_BIND_METHOD" ref="gga576a45a145514cf1258dfa3c03c55f4fa2c3934c6680b675552666654335ca74d" args="" -->PJ_STUN_CHANNEL_BIND_METHOD</em>&nbsp;</td><td>
<p>STUN/TURN ChannelBind as defined by draft-ietf-behave-turn </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga576a45a145514cf1258dfa3c03c55f4fa3bd7aae91772c6ac60f0bf57747293d8"></a><!-- doxytag: member="PJ_STUN_METHOD_MAX" ref="gga576a45a145514cf1258dfa3c03c55f4fa3bd7aae91772c6ac60f0bf57747293d8" args="" -->PJ_STUN_METHOD_MAX</em>&nbsp;</td><td>
<p>All known methods. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="gaab53c9cd65e72092b9735ea8b2150006"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_class_e" ref="gaab53c9cd65e72092b9735ea8b2150006" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJNATH__STUN__MSG.htm#gaab53c9cd65e72092b9735ea8b2150006">pj_stun_msg_class_e</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>STUN message classes constants. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="ggaab53c9cd65e72092b9735ea8b2150006a826385230a43db07c688ba9ffff3be7d"></a><!-- doxytag: member="PJ_STUN_REQUEST_CLASS" ref="ggaab53c9cd65e72092b9735ea8b2150006a826385230a43db07c688ba9ffff3be7d" args="" -->PJ_STUN_REQUEST_CLASS</em>&nbsp;</td><td>
<p>This specifies that the message type is a STUN request message. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaab53c9cd65e72092b9735ea8b2150006afb4437c87401728f3ecb697977237cfa"></a><!-- doxytag: member="PJ_STUN_INDICATION_CLASS" ref="ggaab53c9cd65e72092b9735ea8b2150006afb4437c87401728f3ecb697977237cfa" args="" -->PJ_STUN_INDICATION_CLASS</em>&nbsp;</td><td>
<p>This specifies that the message type is a STUN indication message. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaab53c9cd65e72092b9735ea8b2150006ac60d5d1024c2b84e05e85a0e703aef23"></a><!-- doxytag: member="PJ_STUN_SUCCESS_CLASS" ref="ggaab53c9cd65e72092b9735ea8b2150006ac60d5d1024c2b84e05e85a0e703aef23" args="" -->PJ_STUN_SUCCESS_CLASS</em>&nbsp;</td><td>
<p>This specifies that the message type is a STUN successful response. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="ggaab53c9cd65e72092b9735ea8b2150006a21d9e44d1ca96f3bda0db5df5c98b63e"></a><!-- doxytag: member="PJ_STUN_ERROR_CLASS" ref="ggaab53c9cd65e72092b9735ea8b2150006a21d9e44d1ca96f3bda0db5df5c98b63e" args="" -->PJ_STUN_ERROR_CLASS</em>&nbsp;</td><td>
<p>This specifies that the message type is a STUN error response. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2657d0797f3c25708d67ce1ad1e80067"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_type" ref="ga2657d0797f3c25708d67ce1ad1e80067" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJNATH__STUN__MSG.htm#ga2657d0797f3c25708d67ce1ad1e80067">pj_stun_msg_type</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>This enumeration describes STUN message types. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a0c57d09fa1ca9094cd63ed2396b93855"></a><!-- doxytag: member="PJ_STUN_BINDING_REQUEST" ref="gga2657d0797f3c25708d67ce1ad1e80067a0c57d09fa1ca9094cd63ed2396b93855" args="" -->PJ_STUN_BINDING_REQUEST</em>&nbsp;</td><td>
<p>STUN BINDING request. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a105ea1509b0cab21f744f442a29c900c"></a><!-- doxytag: member="PJ_STUN_BINDING_RESPONSE" ref="gga2657d0797f3c25708d67ce1ad1e80067a105ea1509b0cab21f744f442a29c900c" args="" -->PJ_STUN_BINDING_RESPONSE</em>&nbsp;</td><td>
<p>Successful response to STUN BINDING-REQUEST. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a35e560a37f0d5f0bd90e1d25f5069fe8"></a><!-- doxytag: member="PJ_STUN_BINDING_ERROR_RESPONSE" ref="gga2657d0797f3c25708d67ce1ad1e80067a35e560a37f0d5f0bd90e1d25f5069fe8" args="" -->PJ_STUN_BINDING_ERROR_RESPONSE</em>&nbsp;</td><td>
<p>Error response to STUN BINDING-REQUEST. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a724c3ea57a476734abedc82a2e043dae"></a><!-- doxytag: member="PJ_STUN_BINDING_INDICATION" ref="gga2657d0797f3c25708d67ce1ad1e80067a724c3ea57a476734abedc82a2e043dae" args="" -->PJ_STUN_BINDING_INDICATION</em>&nbsp;</td><td>
<p>Binding Indication (ICE) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a0c73890f41b432a9426afedc98d0d6f9"></a><!-- doxytag: member="PJ_STUN_SHARED_SECRET_REQUEST" ref="gga2657d0797f3c25708d67ce1ad1e80067a0c73890f41b432a9426afedc98d0d6f9" args="" -->PJ_STUN_SHARED_SECRET_REQUEST</em>&nbsp;</td><td>
<p>STUN SHARED-SECRET reqeust. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067ad2111977bd1bfeca68291fac610a5e1f"></a><!-- doxytag: member="PJ_STUN_SHARED_SECRET_RESPONSE" ref="gga2657d0797f3c25708d67ce1ad1e80067ad2111977bd1bfeca68291fac610a5e1f" args="" -->PJ_STUN_SHARED_SECRET_RESPONSE</em>&nbsp;</td><td>
<p>Successful response to STUN SHARED-SECRET reqeust. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a02687f7eab7567f492ee9cf6dca8df6b"></a><!-- doxytag: member="PJ_STUN_SHARED_SECRET_ERROR_RESPONSE" ref="gga2657d0797f3c25708d67ce1ad1e80067a02687f7eab7567f492ee9cf6dca8df6b" args="" -->PJ_STUN_SHARED_SECRET_ERROR_RESPONSE</em>&nbsp;</td><td>
<p>Error response to STUN SHARED-SECRET reqeust. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a265b85120849109fb428970cc6c4793a"></a><!-- doxytag: member="PJ_STUN_ALLOCATE_REQUEST" ref="gga2657d0797f3c25708d67ce1ad1e80067a265b85120849109fb428970cc6c4793a" args="" -->PJ_STUN_ALLOCATE_REQUEST</em>&nbsp;</td><td>
<p>STUN/TURN Allocate Request </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a2963d737383f86680241dd4b838d9759"></a><!-- doxytag: member="PJ_STUN_ALLOCATE_RESPONSE" ref="gga2657d0797f3c25708d67ce1ad1e80067a2963d737383f86680241dd4b838d9759" args="" -->PJ_STUN_ALLOCATE_RESPONSE</em>&nbsp;</td><td>
<p>Successful response to STUN/TURN Allocate Request </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067acc08932cc70e772c2df441042132911e"></a><!-- doxytag: member="PJ_STUN_ALLOCATE_ERROR_RESPONSE" ref="gga2657d0797f3c25708d67ce1ad1e80067acc08932cc70e772c2df441042132911e" args="" -->PJ_STUN_ALLOCATE_ERROR_RESPONSE</em>&nbsp;</td><td>
<p>Failure response to STUN/TURN Allocate Request </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a4bfa2f314430a63ea3992230c04d1150"></a><!-- doxytag: member="PJ_STUN_REFRESH_REQUEST" ref="gga2657d0797f3c25708d67ce1ad1e80067a4bfa2f314430a63ea3992230c04d1150" args="" -->PJ_STUN_REFRESH_REQUEST</em>&nbsp;</td><td>
<p>STUN/TURN REFRESH Request </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a0600f3bfdc1911b8e7a58c67044c7956"></a><!-- doxytag: member="PJ_STUN_REFRESH_RESPONSE" ref="gga2657d0797f3c25708d67ce1ad1e80067a0600f3bfdc1911b8e7a58c67044c7956" args="" -->PJ_STUN_REFRESH_RESPONSE</em>&nbsp;</td><td>
<p>Successful response to STUN REFRESH request </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a622af49c135610831ffa54a6717332dd"></a><!-- doxytag: member="PJ_STUN_REFRESH_ERROR_RESPONSE" ref="gga2657d0797f3c25708d67ce1ad1e80067a622af49c135610831ffa54a6717332dd" args="" -->PJ_STUN_REFRESH_ERROR_RESPONSE</em>&nbsp;</td><td>
<p>Error response to STUN REFRESH request. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a209c2006a05a05bf6590ce15e5c354d6"></a><!-- doxytag: member="PJ_STUN_SEND_INDICATION" ref="gga2657d0797f3c25708d67ce1ad1e80067a209c2006a05a05bf6590ce15e5c354d6" args="" -->PJ_STUN_SEND_INDICATION</em>&nbsp;</td><td>
<p>TURN Send indication </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a61201eef3b1fb8b317f00ddc3617d0b2"></a><!-- doxytag: member="PJ_STUN_DATA_INDICATION" ref="gga2657d0797f3c25708d67ce1ad1e80067a61201eef3b1fb8b317f00ddc3617d0b2" args="" -->PJ_STUN_DATA_INDICATION</em>&nbsp;</td><td>
<p>TURN Data indication </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a7ca6787c77ef452504fe0ff025bc2039"></a><!-- doxytag: member="PJ_STUN_CREATE_PERM_REQUEST" ref="gga2657d0797f3c25708d67ce1ad1e80067a7ca6787c77ef452504fe0ff025bc2039" args="" -->PJ_STUN_CREATE_PERM_REQUEST</em>&nbsp;</td><td>
<p>TURN CreatePermission request </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067afce1a78b9d56d61938ee5b3ba812d2ac"></a><!-- doxytag: member="PJ_STUN_CREATE_PERM_RESPONSE" ref="gga2657d0797f3c25708d67ce1ad1e80067afce1a78b9d56d61938ee5b3ba812d2ac" args="" -->PJ_STUN_CREATE_PERM_RESPONSE</em>&nbsp;</td><td>
<p>TURN CreatePermission successful response. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067abc6bfaf44877eaab44a5fd772fc7592f"></a><!-- doxytag: member="PJ_STUN_CREATE_PERM_ERROR_RESPONSE" ref="gga2657d0797f3c25708d67ce1ad1e80067abc6bfaf44877eaab44a5fd772fc7592f" args="" -->PJ_STUN_CREATE_PERM_ERROR_RESPONSE</em>&nbsp;</td><td>
<p>TURN CreatePermission failure response </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a08a0c49b7c553a700b1e12bbb7f654a9"></a><!-- doxytag: member="PJ_STUN_CHANNEL_BIND_REQUEST" ref="gga2657d0797f3c25708d67ce1ad1e80067a08a0c49b7c553a700b1e12bbb7f654a9" args="" -->PJ_STUN_CHANNEL_BIND_REQUEST</em>&nbsp;</td><td>
<p>STUN/TURN ChannelBind Request </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a2f02dba1b1b59f43cdccc16fe354627c"></a><!-- doxytag: member="PJ_STUN_CHANNEL_BIND_RESPONSE" ref="gga2657d0797f3c25708d67ce1ad1e80067a2f02dba1b1b59f43cdccc16fe354627c" args="" -->PJ_STUN_CHANNEL_BIND_RESPONSE</em>&nbsp;</td><td>
<p>Successful response to STUN ChannelBind request </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2657d0797f3c25708d67ce1ad1e80067a6538864757a13fa27e48b3e1b2d171e8"></a><!-- doxytag: member="PJ_STUN_CHANNEL_BIND_ERROR_RESPONSE" ref="gga2657d0797f3c25708d67ce1ad1e80067a6538864757a13fa27e48b3e1b2d171e8" args="" -->PJ_STUN_CHANNEL_BIND_ERROR_RESPONSE</em>&nbsp;</td><td>
<p>Error response to STUN ChannelBind request. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2b53704e09bec1c58fc25b5266905d42"></a><!-- doxytag: member="stun_msg.h::pj_stun_status" ref="ga2b53704e09bec1c58fc25b5266905d42" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__PJNATH__STUN__MSG.htm#ga2b53704e09bec1c58fc25b5266905d42">pj_stun_status</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>STUN error codes, which goes into STUN ERROR-CODE attribute. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42af5f7fb4fe77d93718f0578784eceea55"></a><!-- doxytag: member="PJ_STUN_SC_TRY_ALTERNATE" ref="gga2b53704e09bec1c58fc25b5266905d42af5f7fb4fe77d93718f0578784eceea55" args="" -->PJ_STUN_SC_TRY_ALTERNATE</em>&nbsp;</td><td>
<p>Try Alternate </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42ac693311bd68be213df80546ef508c307"></a><!-- doxytag: member="PJ_STUN_SC_BAD_REQUEST" ref="gga2b53704e09bec1c58fc25b5266905d42ac693311bd68be213df80546ef508c307" args="" -->PJ_STUN_SC_BAD_REQUEST</em>&nbsp;</td><td>
<p>Bad Request </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42a635c08232fc269a4de46a600012a8027"></a><!-- doxytag: member="PJ_STUN_SC_UNAUTHORIZED" ref="gga2b53704e09bec1c58fc25b5266905d42a635c08232fc269a4de46a600012a8027" args="" -->PJ_STUN_SC_UNAUTHORIZED</em>&nbsp;</td><td>
<p>Unauthorized </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42a3f86e374ff6f59d865d90c7ef99438fc"></a><!-- doxytag: member="PJ_STUN_SC_FORBIDDEN" ref="gga2b53704e09bec1c58fc25b5266905d42a3f86e374ff6f59d865d90c7ef99438fc" args="" -->PJ_STUN_SC_FORBIDDEN</em>&nbsp;</td><td>
<p>Forbidden (TURN) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42aed6c0ace4f6e198ad313050293986d8b"></a><!-- doxytag: member="PJ_STUN_SC_UNKNOWN_ATTRIBUTE" ref="gga2b53704e09bec1c58fc25b5266905d42aed6c0ace4f6e198ad313050293986d8b" args="" -->PJ_STUN_SC_UNKNOWN_ATTRIBUTE</em>&nbsp;</td><td>
<p>Unknown Attribute </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42af7d2823caf72852fc0c11e53e5bba072"></a><!-- doxytag: member="PJ_STUN_SC_ALLOCATION_MISMATCH" ref="gga2b53704e09bec1c58fc25b5266905d42af7d2823caf72852fc0c11e53e5bba072" args="" -->PJ_STUN_SC_ALLOCATION_MISMATCH</em>&nbsp;</td><td>
<p>TURN Alloc Mismatch </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42aa5884a7dfca7d340f06d7b398cad3ec9"></a><!-- doxytag: member="PJ_STUN_SC_STALE_NONCE" ref="gga2b53704e09bec1c58fc25b5266905d42aa5884a7dfca7d340f06d7b398cad3ec9" args="" -->PJ_STUN_SC_STALE_NONCE</em>&nbsp;</td><td>
<p>Stale Nonce </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42af21c40dc97e08c34bcefe75ab3c8c4ef"></a><!-- doxytag: member="PJ_STUN_SC_TRANSITIONING" ref="gga2b53704e09bec1c58fc25b5266905d42af21c40dc97e08c34bcefe75ab3c8c4ef" args="" -->PJ_STUN_SC_TRANSITIONING</em>&nbsp;</td><td>
<p>Transitioning. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42ac0639794a41a1b4b64a9e5c6e8bb9d21"></a><!-- doxytag: member="PJ_STUN_SC_WRONG_CREDENTIALS" ref="gga2b53704e09bec1c58fc25b5266905d42ac0639794a41a1b4b64a9e5c6e8bb9d21" args="" -->PJ_STUN_SC_WRONG_CREDENTIALS</em>&nbsp;</td><td>
<p>TURN Wrong Credentials </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42aac7aff368fad4a5ec4b27592ebb7a173"></a><!-- doxytag: member="PJ_STUN_SC_UNSUPP_TRANSPORT_PROTO" ref="gga2b53704e09bec1c58fc25b5266905d42aac7aff368fad4a5ec4b27592ebb7a173" args="" -->PJ_STUN_SC_UNSUPP_TRANSPORT_PROTO</em>&nbsp;</td><td>
<p>Unsupported Transport or Protocol (TURN) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42ab18308f281bddaae2108d69e3167acb5"></a><!-- doxytag: member="PJ_STUN_SC_OPER_TCP_ONLY" ref="gga2b53704e09bec1c58fc25b5266905d42ab18308f281bddaae2108d69e3167acb5" args="" -->PJ_STUN_SC_OPER_TCP_ONLY</em>&nbsp;</td><td>
<p>Operation for TCP Only </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42aafcce3e0ad9d2ed1aa80959635d21073"></a><!-- doxytag: member="PJ_STUN_SC_CONNECTION_FAILURE" ref="gga2b53704e09bec1c58fc25b5266905d42aafcce3e0ad9d2ed1aa80959635d21073" args="" -->PJ_STUN_SC_CONNECTION_FAILURE</em>&nbsp;</td><td>
<p>Connection Failure </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42a8afab872b641c42386250bfcdbb3bb5a"></a><!-- doxytag: member="PJ_STUN_SC_CONNECTION_TIMEOUT" ref="gga2b53704e09bec1c58fc25b5266905d42a8afab872b641c42386250bfcdbb3bb5a" args="" -->PJ_STUN_SC_CONNECTION_TIMEOUT</em>&nbsp;</td><td>
<p>Connection Timeout </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42ae3840498041a9226c7c7218f25dd74ea"></a><!-- doxytag: member="PJ_STUN_SC_ALLOCATION_QUOTA_REACHED" ref="gga2b53704e09bec1c58fc25b5266905d42ae3840498041a9226c7c7218f25dd74ea" args="" -->PJ_STUN_SC_ALLOCATION_QUOTA_REACHED</em>&nbsp;</td><td>
<p>Allocation Quota Reached (TURN) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42a217a91c8995340bd63da92d427bf88f2"></a><!-- doxytag: member="PJ_STUN_SC_ROLE_CONFLICT" ref="gga2b53704e09bec1c58fc25b5266905d42a217a91c8995340bd63da92d427bf88f2" args="" -->PJ_STUN_SC_ROLE_CONFLICT</em>&nbsp;</td><td>
<p>Role Conflict </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42a62d032f57feaa366939914d18adbb652"></a><!-- doxytag: member="PJ_STUN_SC_SERVER_ERROR" ref="gga2b53704e09bec1c58fc25b5266905d42a62d032f57feaa366939914d18adbb652" args="" -->PJ_STUN_SC_SERVER_ERROR</em>&nbsp;</td><td>
<p>Server Error </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42ab835ee52484467eaff4646fd337a8cb7"></a><!-- doxytag: member="PJ_STUN_SC_INSUFFICIENT_CAPACITY" ref="gga2b53704e09bec1c58fc25b5266905d42ab835ee52484467eaff4646fd337a8cb7" args="" -->PJ_STUN_SC_INSUFFICIENT_CAPACITY</em>&nbsp;</td><td>
<p>Insufficient Capacity (TURN) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga2b53704e09bec1c58fc25b5266905d42a8a9a932f2d0a7e70df29b317c650bf13"></a><!-- doxytag: member="PJ_STUN_SC_GLOBAL_FAILURE" ref="gga2b53704e09bec1c58fc25b5266905d42a8a9a932f2d0a7e70df29b317c650bf13" args="" -->PJ_STUN_SC_GLOBAL_FAILURE</em>&nbsp;</td><td>
<p>Global Failure </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="ga04ade7f02e678ba412feeaf8f7106d5b"></a><!-- doxytag: member="stun_msg.h::pj_stun_attr_clone" ref="ga04ade7f02e678ba412feeaf8f7106d5b" args="(pj_pool_t *pool, const pj_stun_attr_hdr *attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__stun__attr__hdr.htm">pj_stun_attr_hdr</a>* <a class="el" href="group__PJNATH__STUN__MSG.htm#ga04ade7f02e678ba412feeaf8f7106d5b">pj_stun_attr_clone</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__stun__attr__hdr.htm">pj_stun_attr_hdr</a> *&#160;</td>
          <td class="paramname"><em>attr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Clone a STUN attribute.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to allocate memory. </td></tr>
    <tr><td class="paramname">attr</td><td>Attribute to clone.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Duplicate attribute. </dd></dl>

</div>
</div>
<a class="anchor" id="ga1e1f24fbff2e7e1c355461c711a769ff"></a><!-- doxytag: member="stun_msg.h::pj_stun_binary_attr_create" ref="ga1e1f24fbff2e7e1c355461c711a769ff" args="(pj_pool_t *pool, int attr_type, const pj_uint8_t *data, unsigned length, pj_stun_binary_attr **p_attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga1e1f24fbff2e7e1c355461c711a769ff">pj_stun_binary_attr_create</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_uint8_t *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__binary__attr.htm">pj_stun_binary_attr</a> **&#160;</td>
          <td class="paramname"><em>p_attr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create STUN binary attribute.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">attr_type</td><td>The attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>. </td></tr>
    <tr><td class="paramname">data</td><td>Data to be coped to the attribute, or NULL if no data to be copied now. </td></tr>
    <tr><td class="paramname">length</td><td>Length of data, or zero if no data is to be copied now. </td></tr>
    <tr><td class="paramname">p_attr</td><td>Pointer to receive the attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga48d7e3a7b399a6b9fd14548fb783214d"></a><!-- doxytag: member="stun_msg.h::pj_stun_binary_attr_init" ref="ga48d7e3a7b399a6b9fd14548fb783214d" args="(pj_stun_binary_attr *attr, pj_pool_t *pool, int attr_type, const pj_uint8_t *data, unsigned length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga48d7e3a7b399a6b9fd14548fb783214d">pj_stun_binary_attr_init</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__stun__binary__attr.htm">pj_stun_binary_attr</a> *&#160;</td>
          <td class="paramname"><em>attr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_uint8_t *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize STUN binary attribute.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">attr</td><td>The attribute to be initialized. </td></tr>
    <tr><td class="paramname">pool</td><td>Pool to copy data, if the data and length are set. </td></tr>
    <tr><td class="paramname">attr_type</td><td>The attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>. </td></tr>
    <tr><td class="paramname">data</td><td>Data to be coped to the attribute, or NULL if no data to be copied now. </td></tr>
    <tr><td class="paramname">length</td><td>Length of data, or zero if no data is to be copied now.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga1a6ef3a1318db2746006d9dbdf21741f"></a><!-- doxytag: member="stun_msg.h::pj_stun_empty_attr_create" ref="ga1a6ef3a1318db2746006d9dbdf21741f" args="(pj_pool_t *pool, int attr_type, pj_stun_empty_attr **p_attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga1a6ef3a1318db2746006d9dbdf21741f">pj_stun_empty_attr_create</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__empty__attr.htm">pj_stun_empty_attr</a> **&#160;</td>
          <td class="paramname"><em>p_attr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create STUN empty attribute.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">attr_type</td><td>The attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>. </td></tr>
    <tr><td class="paramname">p_attr</td><td>Pointer to receive the attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gac51ee3b426e013be28ccf2a9eb4dfaef"></a><!-- doxytag: member="stun_msg.h::pj_stun_errcode_attr_create" ref="gac51ee3b426e013be28ccf2a9eb4dfaef" args="(pj_pool_t *pool, int err_code, const pj_str_t *err_reason, pj_stun_errcode_attr **p_attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#gac51ee3b426e013be28ccf2a9eb4dfaef">pj_stun_errcode_attr_create</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>err_code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_str_t *&#160;</td>
          <td class="paramname"><em>err_reason</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__errcode__attr.htm">pj_stun_errcode_attr</a> **&#160;</td>
          <td class="paramname"><em>p_attr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create a STUN ERROR-CODE attribute.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">err_code</td><td>STUN error code. </td></tr>
    <tr><td class="paramname">err_reason</td><td>Optional STUN error reason. If NULL is given, the standard error reason will be given. </td></tr>
    <tr><td class="paramname">p_attr</td><td>Pointer to receive the attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gad76663f4a4ca96942c0febeb15d4599d"></a><!-- doxytag: member="stun_msg.h::pj_stun_get_attr_name" ref="gad76663f4a4ca96942c0febeb15d4599d" args="(unsigned attr_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* <a class="el" href="group__PJNATH__STUN__MSG.htm#gad76663f4a4ca96942c0febeb15d4599d">pj_stun_get_attr_name</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>attr_type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get STUN attribute name.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>attr_type The STUN attribute type (in host byte order).</dd>
<dd>
The STUN attribute type name string. </dd></dl>

</div>
</div>
<a class="anchor" id="ga460940db7725cb670b6ce1538cc2cbcd"></a><!-- doxytag: member="stun_msg.h::pj_stun_get_class_name" ref="ga460940db7725cb670b6ce1538cc2cbcd" args="(unsigned msg_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* <a class="el" href="group__PJNATH__STUN__MSG.htm#ga460940db7725cb670b6ce1538cc2cbcd">pj_stun_get_class_name</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>msg_type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get STUN message class name.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">msg_type</td><td>The STUN message type (in host byte order)</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The STUN message class name string. </dd></dl>

</div>
</div>
<a class="anchor" id="gac2922a3d5058ffb5aa333d476191d901"></a><!-- doxytag: member="stun_msg.h::pj_stun_get_err_reason" ref="gac2922a3d5058ffb5aa333d476191d901" args="(int err_code)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_str_t <a class="el" href="group__PJNATH__STUN__MSG.htm#gac2922a3d5058ffb5aa333d476191d901">pj_stun_get_err_reason</a> </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>err_code</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get STUN standard reason phrase for the specified error code.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">err_code</td><td>The STUN error code.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The STUN error reason phrase. </dd></dl>

</div>
</div>
<a class="anchor" id="ga2be7a546769b0239a088885f7cf5584d"></a><!-- doxytag: member="stun_msg.h::pj_stun_get_method_name" ref="ga2be7a546769b0239a088885f7cf5584d" args="(unsigned msg_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* <a class="el" href="group__PJNATH__STUN__MSG.htm#ga2be7a546769b0239a088885f7cf5584d">pj_stun_get_method_name</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>msg_type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Get STUN message method name.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">msg_type</td><td>The STUN message type (in host byte order)</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The STUN message method name string. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9f3023881c4128eb00f35e12d0d8ed6f"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_add_attr" ref="ga9f3023881c4128eb00f35e12d0d8ed6f" args="(pj_stun_msg *msg, pj_stun_attr_hdr *attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga9f3023881c4128eb00f35e12d0d8ed6f">pj_stun_msg_add_attr</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__attr__hdr.htm">pj_stun_attr_hdr</a> *&#160;</td>
          <td class="paramname"><em>attr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Add STUN attribute to STUN message.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>The STUN message. </td></tr>
    <tr><td class="paramname">attr</td><td>The STUN attribute to be added to the message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or PJ_ETOOMANY if there are already too many attributes in the message. </dd></dl>

</div>
</div>
<a class="anchor" id="gaf27857b2dbc20a9f67b67c8fecdec742"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_add_binary_attr" ref="gaf27857b2dbc20a9f67b67c8fecdec742" args="(pj_pool_t *pool, pj_stun_msg *msg, int attr_type, const pj_uint8_t *data, unsigned length)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#gaf27857b2dbc20a9f67b67c8fecdec742">pj_stun_msg_add_binary_attr</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_uint8_t *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>length</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create STUN binary attribute and add the attribute to the message.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">msg</td><td>The STUN message. </td></tr>
    <tr><td class="paramname">attr_type</td><td>The attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>. </td></tr>
    <tr><td class="paramname">data</td><td>Data to be coped to the attribute, or NULL if no data to be copied now. </td></tr>
    <tr><td class="paramname">length</td><td>Length of data, or zero if no data is to be copied now.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga40574a1b2edc34bb5d71c252d9d967cc"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_add_empty_attr" ref="ga40574a1b2edc34bb5d71c252d9d967cc" args="(pj_pool_t *pool, pj_stun_msg *msg, int attr_type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga40574a1b2edc34bb5d71c252d9d967cc">pj_stun_msg_add_empty_attr</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create STUN empty attribute and add the attribute to the message.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">msg</td><td>The STUN message. </td></tr>
    <tr><td class="paramname">attr_type</td><td>The attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gae6c25f14abef814b71a99187b764608f"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_add_errcode_attr" ref="gae6c25f14abef814b71a99187b764608f" args="(pj_pool_t *pool, pj_stun_msg *msg, int err_code, const pj_str_t *err_reason)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#gae6c25f14abef814b71a99187b764608f">pj_stun_msg_add_errcode_attr</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>err_code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_str_t *&#160;</td>
          <td class="paramname"><em>err_reason</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create and add STUN ERROR-CODE attribute to the message.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">msg</td><td>The STUN mesage. </td></tr>
    <tr><td class="paramname">err_code</td><td>STUN error code. </td></tr>
    <tr><td class="paramname">err_reason</td><td>Optional STUN error reason. If NULL is given, the standard error reason will be given.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gab4e6bff649a83d849cbad4806eaa0036"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_add_msgint_attr" ref="gab4e6bff649a83d849cbad4806eaa0036" args="(pj_pool_t *pool, pj_stun_msg *msg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#gab4e6bff649a83d849cbad4806eaa0036">pj_stun_msg_add_msgint_attr</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create and add STUN MESSAGE-INTEGRITY attribute.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">msg</td><td>The STUN message</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga35acd2c0217e6c356762268f21a91c93"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_add_sockaddr_attr" ref="ga35acd2c0217e6c356762268f21a91c93" args="(pj_pool_t *pool, pj_stun_msg *msg, int attr_type, pj_bool_t xor_ed, const pj_sockaddr_t *addr, unsigned addr_len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga35acd2c0217e6c356762268f21a91c93">pj_stun_msg_add_sockaddr_attr</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_bool_t&#160;</td>
          <td class="paramname"><em>xor_ed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_sockaddr_t *&#160;</td>
          <td class="paramname"><em>addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>addr_len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create and add generic STUN IP address attribute to a STUN message. The <em>addr_len</em> and <em>addr</em> parameters specify whether the address is IPv4 or IPv4 address.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">msg</td><td>The STUN message. </td></tr>
    <tr><td class="paramname">attr_type</td><td>Attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>. </td></tr>
    <tr><td class="paramname">xor_ed</td><td>If non-zero, the port and address will be XOR-ed with magic, to make the XOR-MAPPED-ADDRESS attribute. </td></tr>
    <tr><td class="paramname">addr</td><td>A pj_sockaddr_in or pj_sockaddr_in6 structure. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of <em>addr</em> parameter.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga2d783c734653de6be5b12db107af67b1"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_add_string_attr" ref="ga2d783c734653de6be5b12db107af67b1" args="(pj_pool_t *pool, pj_stun_msg *msg, int attr_type, const pj_str_t *value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga2d783c734653de6be5b12db107af67b1">pj_stun_msg_add_string_attr</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_str_t *&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create and add STUN generic string attribute to the message.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">msg</td><td>The STUN message. </td></tr>
    <tr><td class="paramname">attr_type</td><td>Attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>. </td></tr>
    <tr><td class="paramname">value</td><td>The string value to be assigned to the attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga217ed7e663a2f385e9bd8979b291f872"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_add_uint64_attr" ref="ga217ed7e663a2f385e9bd8979b291f872" args="(pj_pool_t *pool, pj_stun_msg *msg, int attr_type, const pj_timestamp *value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga217ed7e663a2f385e9bd8979b291f872">pj_stun_msg_add_uint64_attr</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_timestamp *&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create and add STUN generic 64bit value attribute to the message.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">msg</td><td>The STUN message </td></tr>
    <tr><td class="paramname">attr_type</td><td>Attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>. </td></tr>
    <tr><td class="paramname">value</td><td>The 64bit value to be assigned to the attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga16d4195f735c8c245c52c26ba3a3f8e4"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_add_uint_attr" ref="ga16d4195f735c8c245c52c26ba3a3f8e4" args="(pj_pool_t *pool, pj_stun_msg *msg, int attr_type, pj_uint32_t value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga16d4195f735c8c245c52c26ba3a3f8e4">pj_stun_msg_add_uint_attr</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_uint32_t&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create and add STUN generic 32bit value attribute to the message.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">msg</td><td>The STUN message </td></tr>
    <tr><td class="paramname">attr_type</td><td>Attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>. </td></tr>
    <tr><td class="paramname">value</td><td>The 32bit value to be assigned to the attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gaaeb830ccc84f82e2b29f51a686e40f3a"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_add_unknown_attr" ref="gaaeb830ccc84f82e2b29f51a686e40f3a" args="(pj_pool_t *pool, pj_stun_msg *msg, unsigned attr_cnt, const pj_uint16_t attr[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#gaaeb830ccc84f82e2b29f51a686e40f3a">pj_stun_msg_add_unknown_attr</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>attr_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_uint16_t&#160;</td>
          <td class="paramname"><em>attr</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create and add STUN UNKNOWN-ATTRIBUTES attribute to the message.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">msg</td><td>The STUN message. </td></tr>
    <tr><td class="paramname">attr_cnt</td><td>Number of attributes in the array (can be zero). </td></tr>
    <tr><td class="paramname">attr</td><td>Optional array of attribute types.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga66011e59d3b137e1ee41bead1eeb36d8"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_check" ref="ga66011e59d3b137e1ee41bead1eeb36d8" args="(const pj_uint8_t *pdu, pj_size_t pdu_len, unsigned options)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga66011e59d3b137e1ee41bead1eeb36d8">pj_stun_msg_check</a> </td>
          <td>(</td>
          <td class="paramtype">const pj_uint8_t *&#160;</td>
          <td class="paramname"><em>pdu</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_size_t&#160;</td>
          <td class="paramname"><em>pdu_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Check that the PDU is potentially a valid STUN message. This function is useful when application needs to multiplex STUN packets with other application traffic. When this function returns PJ_SUCCESS, there is a big chance that the packet is a STUN packet.</p>
<p>Note that we cannot be sure that the PDU is a really valid STUN message until we actually parse the PDU.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pdu</td><td>The packet buffer. </td></tr>
    <tr><td class="paramname">pdu_len</td><td>The length of the packet buffer. </td></tr>
    <tr><td class="paramname">options</td><td>Additional options to be applied in the checking, which can be taken from pj_stun_decode_options. One of the useful option is PJ_STUN_IS_DATAGRAM which means that the pdu represents a whole STUN packet.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if the PDU is a potentially valid STUN message. </dd></dl>

</div>
</div>
<a class="anchor" id="ga7d39a062977212f6a6cf06e68ddde14b"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_clone" ref="ga7d39a062977212f6a6cf06e68ddde14b" args="(pj_pool_t *pool, const pj_stun_msg *msg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a>* <a class="el" href="group__PJNATH__STUN__MSG.htm#ga7d39a062977212f6a6cf06e68ddde14b">pj_stun_msg_clone</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Clone a STUN message with all of its attributes.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to allocate memory for the new message. </td></tr>
    <tr><td class="paramname">msg</td><td>The message to be cloned.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The duplicate message. </dd></dl>

</div>
</div>
<a class="anchor" id="ga7e4615155fd3e5629901a91fffc1548e"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_create" ref="ga7e4615155fd3e5629901a91fffc1548e" args="(pj_pool_t *pool, unsigned msg_type, pj_uint32_t magic, const pj_uint8_t tsx_id[12], pj_stun_msg **p_msg)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga7e4615155fd3e5629901a91fffc1548e">pj_stun_msg_create</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>msg_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_uint32_t&#160;</td>
          <td class="paramname"><em>magic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_uint8_t&#160;</td>
          <td class="paramname"><em>tsx_id</em>[12], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> **&#160;</td>
          <td class="paramname"><em>p_msg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create a generic STUN message.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to create the STUN message. </td></tr>
    <tr><td class="paramname">msg_type</td><td>The 14bit message type. </td></tr>
    <tr><td class="paramname">magic</td><td>Magic value to be put to the mesage; for requests, the value should be PJ_STUN_MAGIC. </td></tr>
    <tr><td class="paramname">tsx_id</td><td>Optional transaction ID, or NULL to let the function generates a random transaction ID. </td></tr>
    <tr><td class="paramname">p_msg</td><td>Pointer to receive the message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="gac3e6e128901a948e5c48f2365fd8bcd7"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_create_response" ref="gac3e6e128901a948e5c48f2365fd8bcd7" args="(pj_pool_t *pool, const pj_stun_msg *req_msg, unsigned err_code, const pj_str_t *err_msg, pj_stun_msg **p_response)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#gac3e6e128901a948e5c48f2365fd8bcd7">pj_stun_msg_create_response</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>req_msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>err_code</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_str_t *&#160;</td>
          <td class="paramname"><em>err_msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> **&#160;</td>
          <td class="paramname"><em>p_response</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create STUN response message.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to create the mesage. </td></tr>
    <tr><td class="paramname">req_msg</td><td>The request message. </td></tr>
    <tr><td class="paramname">err_code</td><td>STUN error code. If this value is not zero, then error response will be created, otherwise successful response will be created. </td></tr>
    <tr><td class="paramname">err_msg</td><td>Optional error message to explain err_code. If this value is NULL and err_code is not zero, the error string will be taken from the default STUN error message. </td></tr>
    <tr><td class="paramname">p_response</td><td>Pointer to receive the response.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success, or the appropriate error. </dd></dl>

</div>
</div>
<a class="anchor" id="ga36db49129ecbb593983360eed70c0ceb"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_decode" ref="ga36db49129ecbb593983360eed70c0ceb" args="(pj_pool_t *pool, const pj_uint8_t *pdu, pj_size_t pdu_len, unsigned options, pj_stun_msg **p_msg, pj_size_t *p_parsed_len, pj_stun_msg **p_response)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga36db49129ecbb593983360eed70c0ceb">pj_stun_msg_decode</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_uint8_t *&#160;</td>
          <td class="paramname"><em>pdu</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_size_t&#160;</td>
          <td class="paramname"><em>pdu_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> **&#160;</td>
          <td class="paramname"><em>p_msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_size_t *&#160;</td>
          <td class="paramname"><em>p_parsed_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> **&#160;</td>
          <td class="paramname"><em>p_response</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Decode incoming packet into STUN message.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to allocate the message. </td></tr>
    <tr><td class="paramname">pdu</td><td>The incoming packet to be parsed. </td></tr>
    <tr><td class="paramname">pdu_len</td><td>The length of the incoming packet. </td></tr>
    <tr><td class="paramname">options</td><td>Parsing flags, according to pj_stun_decode_options. </td></tr>
    <tr><td class="paramname">p_msg</td><td>Pointer to receive the parsed message. </td></tr>
    <tr><td class="paramname">p_parsed_len</td><td>Optional pointer to receive how many bytes have been parsed for the STUN message. This is useful when the packet is received over stream oriented transport. </td></tr>
    <tr><td class="paramname">p_response</td><td>Optional pointer to receive an instance of response message, if one can be created. If the packet being decoded is a request message, and it contains error, and a response can be created, then the STUN response message will be returned on this argument.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS if a STUN message has been successfully decoded. </dd></dl>

</div>
</div>
<a class="anchor" id="ga5731590e2a8f3da23457c20c28e2996c"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_dump" ref="ga5731590e2a8f3da23457c20c28e2996c" args="(const pj_stun_msg *msg, char *buffer, unsigned length, unsigned *printed_len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* <a class="el" href="group__PJNATH__STUN__MSG.htm#ga5731590e2a8f3da23457c20c28e2996c">pj_stun_msg_dump</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned *&#160;</td>
          <td class="paramname"><em>printed_len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Dump STUN message to a printable string output.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>The STUN message </td></tr>
    <tr><td class="paramname">buffer</td><td>Buffer where the printable string output will be printed on. </td></tr>
    <tr><td class="paramname">length</td><td>Specify the maximum length of the buffer. </td></tr>
    <tr><td class="paramname">printed_len</td><td>Optional pointer, which on output will be filled up with the actual length of the output string.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The message string output. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9b191ede8ca90bbf52c284ba8b7e4c32"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_encode" ref="ga9b191ede8ca90bbf52c284ba8b7e4c32" args="(pj_stun_msg *msg, pj_uint8_t *pkt_buf, pj_size_t buf_size, unsigned options, const pj_str_t *key, pj_size_t *p_msg_len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga9b191ede8ca90bbf52c284ba8b7e4c32">pj_stun_msg_encode</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_uint8_t *&#160;</td>
          <td class="paramname"><em>pkt_buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_size_t&#160;</td>
          <td class="paramname"><em>buf_size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>options</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_str_t *&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_size_t *&#160;</td>
          <td class="paramname"><em>p_msg_len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Print the STUN message structure to a packet buffer, ready to be sent to remote destination. This function will take care about calculating the MESSAGE-INTEGRITY digest as well as FINGERPRINT value, if these attributes are present in the message.</p>
<p>If application wants to apply credential to the message, it MUST include a blank MESSAGE-INTEGRITY attribute in the message as the last attribute or the attribute before FINGERPRINT. This function will calculate the HMAC digest from the message using the supplied key in the parameter. The key should be set to the password if short term credential is used, or calculated from the MD5 hash of the realm, username, and password using <a class="el" href="group__PJNATH__STUN__AUTH.htm#ga9438d242e00241587d3389155f0db8a4">pj_stun_create_key()</a> if long term credential is used.</p>
<p>If FINGERPRINT attribute is present, this function will calculate the FINGERPRINT CRC attribute for the message. The FINGERPRINT MUST be added as the last attribute of the message.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>The STUN message to be printed. Upon return, some fields in the header (such as message length) will be updated. </td></tr>
    <tr><td class="paramname">pkt_buf</td><td>The buffer to be filled with the packet. </td></tr>
    <tr><td class="paramname">buf_size</td><td>Size of the buffer. </td></tr>
    <tr><td class="paramname">options</td><td>Options, which currently must be zero. </td></tr>
    <tr><td class="paramname">key</td><td>Authentication key to calculate MESSAGE-INTEGRITY value. Application can create this key by using <a class="el" href="group__PJNATH__STUN__AUTH.htm#ga9438d242e00241587d3389155f0db8a4">pj_stun_create_key()</a> function. </td></tr>
    <tr><td class="paramname">p_msg_len</td><td>Upon return, it will be filed with the size of the packet in bytes, or negative value on error.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gad43b749c5bdafac2962cf3a05e778a13"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_find_attr" ref="gad43b749c5bdafac2962cf3a05e778a13" args="(const pj_stun_msg *msg, int attr_type, unsigned start_index)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structpj__stun__attr__hdr.htm">pj_stun_attr_hdr</a>* <a class="el" href="group__PJNATH__STUN__MSG.htm#gad43b749c5bdafac2962cf3a05e778a13">pj_stun_msg_find_attr</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>start_index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Find STUN attribute in the STUN message, starting from the specified index.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>The STUN message. </td></tr>
    <tr><td class="paramname">attr_type</td><td>The attribute type to be found, from pj_stun_attr_type. </td></tr>
    <tr><td class="paramname">start_index</td><td>The start index of the attribute in the message. Specify zero to start searching from the first attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The attribute instance, or NULL if it cannot be found. </dd></dl>

</div>
</div>
<a class="anchor" id="ga229ed137a8851011b1236b059b5836b7"></a><!-- doxytag: member="stun_msg.h::pj_stun_msg_init" ref="ga229ed137a8851011b1236b059b5836b7" args="(pj_stun_msg *msg, unsigned msg_type, pj_uint32_t magic, const pj_uint8_t tsx_id[12])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga229ed137a8851011b1236b059b5836b7">pj_stun_msg_init</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__stun__msg.htm">pj_stun_msg</a> *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>msg_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_uint32_t&#160;</td>
          <td class="paramname"><em>magic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_uint8_t&#160;</td>
          <td class="paramname"><em>tsx_id</em>[12]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize a generic STUN message.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>The message structure to be initialized. </td></tr>
    <tr><td class="paramname">msg_type</td><td>The 14bit message type (see pj_stun_msg_type constants). </td></tr>
    <tr><td class="paramname">magic</td><td>Magic value to be put to the mesage; for requests, the value normally should be PJ_STUN_MAGIC. </td></tr>
    <tr><td class="paramname">tsx_id</td><td>Optional transaction ID, or NULL to let the function generates a random transaction ID.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success. </dd></dl>

</div>
</div>
<a class="anchor" id="gae1e7bf19c84a6391c486ad56599bdb52"></a><!-- doxytag: member="stun_msg.h::pj_stun_msgint_attr_create" ref="gae1e7bf19c84a6391c486ad56599bdb52" args="(pj_pool_t *pool, pj_stun_msgint_attr **p_attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#gae1e7bf19c84a6391c486ad56599bdb52">pj_stun_msgint_attr_create</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__msgint__attr.htm">pj_stun_msgint_attr</a> **&#160;</td>
          <td class="paramname"><em>p_attr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create a STUN MESSAGE-INTEGRITY attribute.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">p_attr</td><td>Pointer to receive the attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga87b80726810c12f95c76a60c5fe3ecba"></a><!-- doxytag: member="stun_msg.h::pj_stun_set_padding_char" ref="ga87b80726810c12f95c76a60c5fe3ecba" args="(int chr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="group__PJNATH__STUN__MSG.htm#ga87b80726810c12f95c76a60c5fe3ecba">pj_stun_set_padding_char</a> </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>chr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Internal: set the padding character for string attribute. The default padding character is PJ_STUN_STRING_ATTR_PAD_CHR.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>The previous padding character. </dd></dl>

</div>
</div>
<a class="anchor" id="ga9369b4a7a128c14a8978d83c9c806a7e"></a><!-- doxytag: member="stun_msg.h::pj_stun_sockaddr_attr_create" ref="ga9369b4a7a128c14a8978d83c9c806a7e" args="(pj_pool_t *pool, int attr_type, pj_bool_t xor_ed, const pj_sockaddr_t *addr, unsigned addr_len, pj_stun_sockaddr_attr **p_attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga9369b4a7a128c14a8978d83c9c806a7e">pj_stun_sockaddr_attr_create</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_bool_t&#160;</td>
          <td class="paramname"><em>xor_ed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_sockaddr_t *&#160;</td>
          <td class="paramname"><em>addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>addr_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__sockaddr__attr.htm">pj_stun_sockaddr_attr</a> **&#160;</td>
          <td class="paramname"><em>p_attr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create a generic STUN IP address attribute. The <em>addr_len</em> and <em>addr</em> parameters specify whether the address is IPv4 or IPv4 address.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">attr_type</td><td>Attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>. </td></tr>
    <tr><td class="paramname">xor_ed</td><td>If non-zero, the port and address will be XOR-ed with magic, to make the XOR-MAPPED-ADDRESS attribute. </td></tr>
    <tr><td class="paramname">addr</td><td>A pj_sockaddr_in or pj_sockaddr_in6 structure. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of <em>addr</em> parameter. </td></tr>
    <tr><td class="paramname">p_attr</td><td>Pointer to receive the attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga84b98d3b916252efdbacbc845b00d790"></a><!-- doxytag: member="stun_msg.h::pj_stun_sockaddr_attr_init" ref="ga84b98d3b916252efdbacbc845b00d790" args="(pj_stun_sockaddr_attr *attr, int attr_type, pj_bool_t xor_ed, const pj_sockaddr_t *addr, unsigned addr_len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga84b98d3b916252efdbacbc845b00d790">pj_stun_sockaddr_attr_init</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__stun__sockaddr__attr.htm">pj_stun_sockaddr_attr</a> *&#160;</td>
          <td class="paramname"><em>attr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_bool_t&#160;</td>
          <td class="paramname"><em>xor_ed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_sockaddr_t *&#160;</td>
          <td class="paramname"><em>addr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>addr_len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize generic STUN IP address attribute. The <em>addr_len</em> and <em>addr</em> parameters specify whether the address is IPv4 or IPv4 address.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">attr</td><td>The socket address attribute to initialize. </td></tr>
    <tr><td class="paramname">attr_type</td><td>Attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>. </td></tr>
    <tr><td class="paramname">xor_ed</td><td>If non-zero, the port and address will be XOR-ed with magic, to make the XOR-MAPPED-ADDRESS attribute. </td></tr>
    <tr><td class="paramname">addr</td><td>A pj_sockaddr_in or pj_sockaddr_in6 structure. </td></tr>
    <tr><td class="paramname">addr_len</td><td>Length of <em>addr</em> parameter.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga080db867a9c4c07206b3a25a991858b0"></a><!-- doxytag: member="stun_msg.h::pj_stun_string_attr_create" ref="ga080db867a9c4c07206b3a25a991858b0" args="(pj_pool_t *pool, int attr_type, const pj_str_t *value, pj_stun_string_attr **p_attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga080db867a9c4c07206b3a25a991858b0">pj_stun_string_attr_create</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_str_t *&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__string__attr.htm">pj_stun_string_attr</a> **&#160;</td>
          <td class="paramname"><em>p_attr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create a STUN generic string attribute.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">attr_type</td><td>Attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>. </td></tr>
    <tr><td class="paramname">value</td><td>The string value to be assigned to the attribute. </td></tr>
    <tr><td class="paramname">p_attr</td><td>Pointer to receive the attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga6db7dcf5da336d5b04ebca774bd03574"></a><!-- doxytag: member="stun_msg.h::pj_stun_string_attr_init" ref="ga6db7dcf5da336d5b04ebca774bd03574" args="(pj_stun_string_attr *attr, pj_pool_t *pool, int attr_type, const pj_str_t *value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga6db7dcf5da336d5b04ebca774bd03574">pj_stun_string_attr_init</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structpj__stun__string__attr.htm">pj_stun_string_attr</a> *&#160;</td>
          <td class="paramname"><em>attr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_str_t *&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize a STUN generic string attribute.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">attr</td><td>The string attribute to be initialized. </td></tr>
    <tr><td class="paramname">pool</td><td>Pool to duplicate the value into the attribute, if value is not NULL or empty. </td></tr>
    <tr><td class="paramname">attr_type</td><td>Attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>. </td></tr>
    <tr><td class="paramname">value</td><td>The string value to be assigned to the attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga8083a686e9712261a0f2b029808b7a83"></a><!-- doxytag: member="stun_msg.h::pj_stun_uint64_attr_create" ref="ga8083a686e9712261a0f2b029808b7a83" args="(pj_pool_t *pool, int attr_type, const pj_timestamp *value, pj_stun_uint64_attr **p_attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga8083a686e9712261a0f2b029808b7a83">pj_stun_uint64_attr_create</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_timestamp *&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__uint64__attr.htm">pj_stun_uint64_attr</a> **&#160;</td>
          <td class="paramname"><em>p_attr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create a STUN generic 64bit value attribute.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>Pool to allocate memory from. </td></tr>
    <tr><td class="paramname">attr_type</td><td>Attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>. </td></tr>
    <tr><td class="paramname">value</td><td>Optional value to be assigned. </td></tr>
    <tr><td class="paramname">p_attr</td><td>Pointer to receive the attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="ga2bf780e76968adb924fc65c0a5931185"></a><!-- doxytag: member="stun_msg.h::pj_stun_uint_attr_create" ref="ga2bf780e76968adb924fc65c0a5931185" args="(pj_pool_t *pool, int attr_type, pj_uint32_t value, pj_stun_uint_attr **p_attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#ga2bf780e76968adb924fc65c0a5931185">pj_stun_uint_attr_create</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>attr_type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">pj_uint32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__uint__attr.htm">pj_stun_uint_attr</a> **&#160;</td>
          <td class="paramname"><em>p_attr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create a STUN generic 32bit value attribute.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">attr_type</td><td>Attribute type, from <a class="el" href="group__PJNATH__STUN__MSG.htm#ga754fb3c4da7be369aa3ec37e757af562">pj_stun_attr_type</a>. </td></tr>
    <tr><td class="paramname">value</td><td>The 32bit value to be assigned to the attribute. </td></tr>
    <tr><td class="paramname">p_attr</td><td>Pointer to receive the attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
<a class="anchor" id="gad3cba84fbfcd88ea03244140f1e681e4"></a><!-- doxytag: member="stun_msg.h::pj_stun_unknown_attr_create" ref="gad3cba84fbfcd88ea03244140f1e681e4" args="(pj_pool_t *pool, unsigned attr_cnt, const pj_uint16_t attr[], pj_stun_unknown_attr **p_attr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pj_status_t <a class="el" href="group__PJNATH__STUN__MSG.htm#gad3cba84fbfcd88ea03244140f1e681e4">pj_stun_unknown_attr_create</a> </td>
          <td>(</td>
          <td class="paramtype">pj_pool_t *&#160;</td>
          <td class="paramname"><em>pool</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>attr_cnt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const pj_uint16_t&#160;</td>
          <td class="paramname"><em>attr</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structpj__stun__unknown__attr.htm">pj_stun_unknown_attr</a> **&#160;</td>
          <td class="paramname"><em>p_attr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Create instance of STUN UNKNOWN-ATTRIBUTES attribute and copy the unknown attribute array to the attribute.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">pool</td><td>The pool to allocate memory from. </td></tr>
    <tr><td class="paramname">attr_cnt</td><td>Number of attributes in the array (can be zero). </td></tr>
    <tr><td class="paramname">attr</td><td>Optional array of attributes. </td></tr>
    <tr><td class="paramname">p_attr</td><td>Pointer to receive the attribute.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>PJ_SUCCESS on success or the appropriate error code. </dd></dl>

</div>
</div>
</div><!-- contents -->
	</TD></TD></TABLE>
<p>&nbsp;</p>
<hr><center>
PJNATH - Open Source NAT traversal helper library supporting STUN, TURN, and ICE<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
