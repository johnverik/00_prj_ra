<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>stun_config.h Source File (2.4)</title>
<link href="/style/style.css" rel="stylesheet" type="text/css">
</head><body>
	<!--#include virtual="/header.html" -->
	<TABLE border=0 width="90%"><TR><TD>
	<p><A HREF="/">Home</A> --&gt; <A HREF="/docs.htm">Documentations</A> --&gt; <A HREF="/pjnath/docs/html/index.htm">PJNATH Reference</A></p>


<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>Globals</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">stun_config.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="stun__config_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* $Id: stun_config.h 4199 2012-07-05 10:52:55Z nanang $ */</span>
<a name="l00002"></a>00002 <span class="comment">/* </span>
<a name="l00003"></a>00003 <span class="comment"> * Copyright (C) 2008-2011 Teluu Inc. (http://www.teluu.com)</span>
<a name="l00004"></a>00004 <span class="comment"> * Copyright (C) 2003-2008 Benny Prijono &lt;benny@prijono.org&gt;</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> * This program is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> * it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> * the Free Software Foundation; either version 2 of the License, or</span>
<a name="l00009"></a>00009 <span class="comment"> * (at your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> * This program is distributed in the hope that it will be useful,</span>
<a name="l00012"></a>00012 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00014"></a>00014 <span class="comment"> * GNU General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> * along with this program; if not, write to the Free Software</span>
<a name="l00018"></a>00018 <span class="comment"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA </span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 <span class="preprocessor">#ifndef __PJNATH_STUN_CONFIG_H__</span>
<a name="l00021"></a>00021 <span class="preprocessor"></span><span class="preprocessor">#define __PJNATH_STUN_CONFIG_H__</span>
<a name="l00022"></a>00022 <span class="preprocessor"></span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;<a class="code" href="stun__msg_8h.htm" title="STUN message components.">pjnath/stun_msg.h</a>&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;pj/assert.h&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;pj/errno.h&gt;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;pj/string.h&gt;</span>
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 PJ_BEGIN_DECL
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="comment">/* **************************************************************************/</span>
<a name="l00048"></a><a class="code" href="structpj__stun__config.htm">00048</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structpj__stun__config.htm">pj_stun_config</a>
<a name="l00049"></a>00049 {
<a name="l00053"></a><a class="code" href="structpj__stun__config.htm#a226c54aa038ed7854e77d088d06ed779">00053</a>     pj_pool_factory     *<a class="code" href="structpj__stun__config.htm#a226c54aa038ed7854e77d088d06ed779">pf</a>;
<a name="l00054"></a>00054 
<a name="l00058"></a><a class="code" href="structpj__stun__config.htm#a8f723e66e16f71207acadc169d2f2323">00058</a>     pj_ioqueue_t        *<a class="code" href="structpj__stun__config.htm#a8f723e66e16f71207acadc169d2f2323">ioqueue</a>;
<a name="l00059"></a>00059 
<a name="l00063"></a><a class="code" href="structpj__stun__config.htm#a0b80195cc099560fd65b39cbf0e0c804">00063</a>     pj_timer_heap_t     *<a class="code" href="structpj__stun__config.htm#a0b80195cc099560fd65b39cbf0e0c804">timer_heap</a>;
<a name="l00064"></a>00064 
<a name="l00068"></a><a class="code" href="structpj__stun__config.htm#af1c1e20ffa17c1b2a822778593170e6b">00068</a>     <span class="keywordtype">unsigned</span>             <a class="code" href="structpj__stun__config.htm#af1c1e20ffa17c1b2a822778593170e6b">options</a>;
<a name="l00069"></a>00069 
<a name="l00074"></a><a class="code" href="structpj__stun__config.htm#ae92ba13e203abe6a90d0996ae9eddad0">00074</a>     <span class="keywordtype">unsigned</span>             <a class="code" href="structpj__stun__config.htm#ae92ba13e203abe6a90d0996ae9eddad0">rto_msec</a>;
<a name="l00075"></a>00075 
<a name="l00082"></a><a class="code" href="structpj__stun__config.htm#ad5f092f901d1559f73ce4fdcd69562cc">00082</a>     <span class="keywordtype">unsigned</span>             <a class="code" href="structpj__stun__config.htm#ad5f092f901d1559f73ce4fdcd69562cc">res_cache_msec</a>;
<a name="l00083"></a>00083 
<a name="l00089"></a><a class="code" href="structpj__stun__config.htm#ab455b4d65881efa599f5e8741deee0fc">00089</a>     pj_str_t             <a class="code" href="structpj__stun__config.htm#ab455b4d65881efa599f5e8741deee0fc">software_name</a>;
<a name="l00090"></a>00090 
<a name="l00091"></a>00091 } <a class="code" href="structpj__stun__config.htm">pj_stun_config</a>;
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 
<a name="l00094"></a>00094 
<a name="l00098"></a><a class="code" href="group__PJNATH__STUN__CONFIG.htm#ga2654ee0038afad692906dd3de4745052">00098</a> PJ_INLINE(<span class="keywordtype">void</span>) <a class="code" href="group__PJNATH__STUN__CONFIG.htm#ga2654ee0038afad692906dd3de4745052">pj_stun_config_init</a>(<a class="code" href="structpj__stun__config.htm">pj_stun_config</a> *cfg,
<a name="l00099"></a>00099                                     pj_pool_factory *factory,
<a name="l00100"></a>00100                                     <span class="keywordtype">unsigned</span> options,
<a name="l00101"></a>00101                                     pj_ioqueue_t *ioqueue,
<a name="l00102"></a>00102                                     pj_timer_heap_t *timer_heap)
<a name="l00103"></a>00103 {
<a name="l00104"></a>00104     pj_bzero(cfg, <span class="keyword">sizeof</span>(*cfg));
<a name="l00105"></a>00105 
<a name="l00106"></a>00106     cfg-&gt;pf = factory;
<a name="l00107"></a>00107     cfg-&gt;options = options;
<a name="l00108"></a>00108     cfg-&gt;ioqueue = ioqueue;
<a name="l00109"></a>00109     cfg-&gt;timer_heap = timer_heap;
<a name="l00110"></a>00110     cfg-&gt;rto_msec = <a class="code" href="group__PJNATH__CONFIG.htm#gabf04d4496a61ccd06b7c3018b8c832a8">PJ_STUN_RTO_VALUE</a>;
<a name="l00111"></a>00111     cfg-&gt;res_cache_msec = <a class="code" href="group__PJNATH__CONFIG.htm#ga876ac9e70fb8a88930f17ecc3d67d79e">PJ_STUN_RES_CACHE_DURATION</a>;
<a name="l00112"></a>00112     cfg-&gt;software_name = pj_str((<span class="keywordtype">char</span>*)PJNATH_STUN_SOFTWARE_NAME);
<a name="l00113"></a>00113 }
<a name="l00114"></a>00114 
<a name="l00115"></a>00115 
<a name="l00119"></a><a class="code" href="group__PJNATH__STUN__CONFIG.htm#gaf97386266b4151d5373dac0853155c52">00119</a> PJ_INLINE(pj_status_t) <a class="code" href="group__PJNATH__STUN__CONFIG.htm#gaf97386266b4151d5373dac0853155c52">pj_stun_config_check_valid</a>(const <a class="code" href="structpj__stun__config.htm">pj_stun_config</a> *cfg)
<a name="l00120"></a>00120 {
<a name="l00121"></a>00121     PJ_ASSERT_RETURN(cfg-&gt;ioqueue &amp;&amp; cfg-&gt;pf &amp;&amp; cfg-&gt;timer_heap &amp;&amp;
<a name="l00122"></a>00122                      cfg-&gt;rto_msec &amp;&amp; cfg-&gt;res_cache_msec, PJ_EINVAL);
<a name="l00123"></a>00123     <span class="keywordflow">return</span> PJ_SUCCESS;
<a name="l00124"></a>00124 }
<a name="l00125"></a>00125 
<a name="l00126"></a>00126 
<a name="l00132"></a>00132 PJ_END_DECL
<a name="l00133"></a>00133 
<a name="l00134"></a>00134 
<a name="l00135"></a>00135 <span class="preprocessor">#endif  </span><span class="comment">/* __PJNATH_STUN_CONFIG_H__ */</span>
<a name="l00136"></a>00136 
</pre></div></div><!-- contents -->
	</TD></TD></TABLE>
<p>&nbsp;</p>
<hr><center>
PJNATH - Open Source NAT traversal helper library supporting STUN, TURN, and ICE<br>
Copyright (C) 2006-2009 Teluu Inc.
</center>


<!--#include virtual="/footer.html" -->

</BODY>
</HTML>
